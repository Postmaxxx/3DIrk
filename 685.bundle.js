"use strict";(self.webpackChunk_3dprint=self.webpackChunk_3dprint||[]).push([[685],{7123:(e,t,s)=>{var a=s(5893),i=s(7294),o=s(8840);t.Z=({src:e,alt:t,id:s})=>{const[r,c]=(0,i.useState)(!1),d=(0,i.useRef)(null);return(0,a.jsxs)(a.Fragment,{children:[r||(0,a.jsx)(o.Z,{}),(0,a.jsx)("img",{ref:d,src:e,alt:t,onLoad:()=>{c(!0)},style:{display:r?"block":"none"},id:s})]})}},6551:(e,t,s)=>{s.r(t),s.d(t,{default:()=>q});var a=s(5893),i=s(4791),o=s(6113),r=s(7294),c=s(8595),d=s(7820),l=s(9590);var n=[{id:"auto",name:{en:"Auto/moto",ru:"Авто/мото"}},{id:"c2",name:{en:"Toys",ru:"Игрушки"}},{id:"c3",name:{en:"Test",ru:"Тест"}},{id:"c4",name:{en:"Decor",ru:"Декор"}}];const g=e=>({type:l.ED.SET_LOAD_DATA_STATUS_CATEGORIES_LIST,payload:e}),u=e=>({type:l.ED.SET_SELECTED_CATEGORY,payload:e}),m=e=>({type:l.ED.SET_SELECTED_PRODUCT,payload:e}),p=e=>({type:l.ED.SET_DATA_CATEGORIES_LIST,payload:e}),h=()=>async function(e){e(g({status:"loading",message:"Loading categories list"}));try{new Promise(((e,t)=>{setTimeout((()=>{n?e(n):t({mesasage:"CategoriesList not found"})}),200)})).then((t=>{e(p(t)),e(g({status:"success",message:"Categories list loaded"}))})).catch((t=>{e(g({status:"error",message:`ERROR while loading categories list: ${t}`}))}))}catch(t){e(g({status:"error",message:`ERROR while loading categories list: ${t}`}))}},y=e=>({type:l.ED.SET_LOAD_DATA_STATUS_CATEGORY,payload:e}),_=e=>({type:l.ED.SET_DATA_CATEGORY,payload:e}),L=e=>async function(t){t(y({dataLoading:{status:"loading",message:`Loading category id: ${e}`},id:e}));try{const s=await new Promise(((t,s)=>{setTimeout((()=>{const a=d.Z.filter((t=>t.categoryId===e));a?t(a):s(`Category ${e} is empty`)}),200)})),a=n.find((t=>t.id===e))?.name||{en:"Other",ru:"Другое"};t(_({id:e,name:a,products:s,page:0})),t(y({dataLoading:{status:"success",message:`Loaded category id: ${e}`},id:e}))}catch(s){t(y({dataLoading:{status:"error",message:`ERROR while loading category id=${e}: error:${s}`},id:e}))}};var x=s(8840),C=s(7123),S=s(9655),j=s(1043);const E={setCategoriesList:p,setLoadDataStatusCategoriesList:g,setLoadDataStatusCategory:y,setSelectedCategory:u,setSelectedProduct:m,loadCategoriesList:h,loadCategory:L},f={setProduct:j.Gr,setLoadDataStatusProduct:j.KT};var v=(0,o.$j)((e=>({lang:e.base.lang})),(e=>({setState:{catalog:(0,i.DE)(E,e),product:(0,i.DE)(f,e)}})))((({lang:e,products:t,setState:s})=>(0,a.jsx)("div",{className:"gallery__container",children:t.map((t=>(0,a.jsx)(S.OL,{to:t.id,onClick:()=>(e=>{s.product.setLoadDataStatusProduct({status:"success",message:""}),s.product.setProduct(e)})(t),children:(0,a.jsxs)("div",{className:"gallery__item",children:[(0,a.jsx)("div",{className:"img__container",children:(0,a.jsx)(C.Z,{src:t.imgs[0].url,alt:t.imgs[0].name[e]})}),(0,a.jsxs)("div",{className:"descr__container",children:[(0,a.jsx)("span",{className:"name",children:t.name[e]}),(0,a.jsxs)("span",{className:"price",children:["en"===e?"Price":"Цена",": ",t.price[e]]})]})]})},t.id)))})));const T={setCategoriesList:p,setLoadDataStatusCategoriesList:g,setLoadDataStatusCategory:y,setSelectedCategory:u,setSelectedProduct:m,loadCategoriesList:h,loadCategory:L,setPage:e=>({type:l.ED.SET_PAGE,payload:e}),setCategory:_};var D=(0,o.$j)((e=>({lang:e.base.lang,loadingProducts:e.catalog.categories[e.catalog.selectedCategory]?.dataLoading,categoriesList:e.catalog.categoriesList,selectedCategory:e.catalog.selectedCategory,categories:e.catalog.categories,selectedProduct:e.catalog.selectedProduct})),(e=>({setState:{catalog:(0,i.DE)(T,e)}})))((({lang:e,selectedCategory:t,setState:s,loadingProducts:i,categories:o})=>{const d=(0,r.useRef)(),l=(0,r.useRef)(null),[n,g]=(0,r.useState)([[]]),[u,m]=(0,r.useState)(6),p={lazyLoad:!1,updateOnMove:!0,perPage:1,fixedWidth:"100%",perMove:1,pagination:!0,arrows:!0,drag:!1,speed:500,wheel:!1,wheelSleep:300,interval:0,pauseOnHover:!0,breakpoints:{768:{wheel:!1}}};return(0,r.useEffect)((()=>{t&&!o[t]&&s.catalog.loadCategory(t)}),[t]),(0,r.useEffect)((()=>{if("success"!==o[t]?.dataLoading?.status)return;const e=[];for(let s=0;s<o[t].products.length;s+=u)e.push(o[t].products.slice(s,s+u));g(e)}),[o[t]?.dataLoading?.status,t]),(0,r.useEffect)((()=>{if(l.current)return document.body.offsetWidth<993&&m(4),d.current=new c.ZP(l.current,p),d.current.on("pagination:updated",(function(e,t,s){e.list.classList.add("splide__pagination--custom"),e.items.forEach(((t,a)=>{0===a||a===e.items.length-1||a<=s.page+1&&a>=s.page-1?t.button.classList.remove("no-display"):t.button.classList.add("no-display"),a===s.page+2&&s.page+2<e.items.length-1||a===s.page-2&&s.page-2>0?(t.button.textContent=" ... ",t.button.classList.remove("no-display")):t.button.textContent=String(t.page+1)}))})),d.current.on("move",(()=>{s.catalog.setPage(d.current?.index)})),d.current.mount(),d.current?.go(o[t].page),()=>{d.current?.destroy()}}),[n]),(0,a.jsx)("div",{className:"splider_single__container",children:"success"===i?.status?(0,a.jsx)("div",{className:"splide splider_single",ref:l,"aria-label":"",children:(0,a.jsx)("div",{className:"splide__track",children:(0,a.jsx)("ul",{className:"splide__list",children:n.map(((e,t)=>(0,a.jsx)("li",{className:"splide__slide",children:(0,a.jsx)(v,{products:e})},t)))})})}):(0,a.jsx)(x.Z,{})})}));const b={setCategoriesList:p,setLoadDataStatusCategoriesList:g,setLoadDataStatusCategory:y,setSelectedCategory:u,setSelectedProduct:m,loadCategoriesList:h};var R=(0,o.$j)((e=>({lang:e.base.lang,loading:e.catalog.categoriesListLoading,list:e.catalog.categoriesList,selectedCategory:e.catalog.selectedCategory})),(e=>({setState:{catalog:(0,i.DE)(b,e)}})))((({list:e,selectedCategory:t,loading:s,lang:i,setState:o})=>((0,r.useEffect)((()=>{"success"!==s.status?o.catalog.loadCategoriesList():!t&&o.catalog.setSelectedCategory(e[0]?.id)}),[s.status]),(0,a.jsx)("div",{className:"categories-list__container",children:(0,a.jsx)("div",{className:"list",children:"success"===s.status?(0,a.jsx)("ul",{children:e.map(((e,s)=>(0,a.jsx)("li",{className:e.id===t?"selected":"",onClick:()=>{return t=e.id,void o.catalog.setSelectedCategory(t);var t},children:e.name[i]},e.id)))}):(0,a.jsx)(x.Z,{})})})))),A=s.p+"assets/images/catalog_hero.webp";var P=(0,o.$j)((e=>({lang:e.base.lang})))((({lang:e})=>(0,a.jsxs)("div",{className:"catalog-intro",children:[(0,a.jsx)("h1",{children:"en"===e?"Our catalog":"Наш каталог"}),(0,a.jsxs)("div",{className:"descr",children:[(0,a.jsx)("div",{className:"img__container",children:(0,a.jsx)(C.Z,{src:A,alt:"en"===e?"Catalog image":"Фото каталога"})}),(0,a.jsxs)("div",{className:"descr__text",children:[(0,a.jsx)("h2",{children:"en"===e?"Subheader":"Подзаголовок"}),(0,a.jsx)("ul",{children:"en"===e?(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("p",{children:"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo tempore atque et nostrum qui vitae! Dolor necessitatibus ipsum consectetur optio."}),(0,a.jsx)("p",{children:"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Necessitatibus, eveniet odit veritatis totam exercitationem id perspiciatis dolores, ipsum quos reprehenderit, consectetur facere harum rerum libero tempore incidunt modi! Placeat cumque quidem velit porro amet quam possimus dolorum eaque exercitationem quod!"}),(0,a.jsx)("p",{children:"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo tempore atque et nostrum qui vitae! Dolor necessitatibus ipsum consectetur optio."})]}):(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("p",{children:"ВАП в апва ып аволрп ывар лорвыа олывапрловы рпвыадлопрвы аплвоапр лвдаыпр влаорплв ыоарп лвдаырплваыодрплд ывраплва лоаврплвор влапрыдалопвырапл дрываплдывра"}),(0,a.jsx)("p",{children:"ВАП в апва ып аволрп ывар лорвыа олывапрловы рпвыадлопрвы аплвоапр лвдаыпр влаорплв ыоарп лвдаырплваыодрплд ывраплва лоаврплвор влапрыдалопвырапл дрываплдывра"})]})})]})]})]}))),N=s(3419),O=s(2886);const $={loadColors:N.Uf},w={loadFibers:O.il};var q=(0,o.$j)((e=>({colorsLoading:e.colors.dataLoading,fibersLoading:e.fibers.dataLoading})),(e=>({setState:{colors:(0,i.DE)($,e),fibers:(0,i.DE)(w,e)}})))((({colorsLoading:e,fibersLoading:t,setState:s})=>((0,r.useEffect)((()=>{"idle"===e.status&&s.colors.loadColors(),"idle"===t.status&&s.fibers.loadFibers()}),[]),(0,a.jsx)("div",{className:"page page_catalog",children:(0,a.jsx)("div",{className:"container_page",children:(0,a.jsxs)("div",{className:"container",children:[(0,a.jsx)(P,{}),(0,a.jsxs)("div",{className:"splider_catalog__main",children:[(0,a.jsx)(R,{}),(0,a.jsx)(D,{})]})]})})}))))},1043:(e,t,s)=>{s.d(t,{Gr:()=>r,KT:()=>o,LX:()=>c});var a=s(9590),i=s(7820);const o=e=>({type:a.EH.SET_LOAD_DATA_STATUS_PRODUCT,payload:e}),r=e=>({type:a.EH.SET_DATA_PRODUCT,payload:e}),c=e=>async function(t){t(o({status:"loading",message:`Loading product ${e}`}));try{new Promise(((t,s)=>{setTimeout((()=>{const a=i.Z.find((t=>t.id===e));a?t(a):s({mesasage:`product ${e} not found`})}),1e3)})).then((s=>{t(r(s)),t(o({status:"success",message:`Product id=${e} loaded`}))})).catch((s=>{t(o({status:"error",message:`ERROR while loading product id=${e}: ${s}`}))}))}catch(s){t(o({status:"error",message:`ERROR while loading product id=${e}: ${s}`}))}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,