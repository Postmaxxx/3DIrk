"use strict";(self.webpackChunk_3dprint=self.webpackChunk_3dprint||[]).push([[735],{5375:(e,a,s)=>{s.d(a,{B:()=>i,O:()=>t});const t=["strength","stiffnes","durability","resistantImpact","minTemp","maxTemp","thermalExpansion","density","flexible","elastic","soft","composite","resistantUV","resistantWater","dissolvable","resistantHeat","resistantChemically","resistantFatigue","cutting","grinding","price"],i={strength:{name:{en:"Strength",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"MPa",ru:"Мпа"}},stiffnes:{name:{en:"Stiffnes",ru:"SПрочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},durability:{name:{en:"Durability",ru:"DПрочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},minTemp:{name:{en:"Min usage temp",ru:"mПрочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"°C",ru:"°C"}},maxTemp:{name:{en:"Max usage temp",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"°C",ru:"°C"}},thermalExpansion:{name:{en:"Thermal expansion",ru:"svПрочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"µm/m-°C",ru:"µm/m-°C"}},density:{name:{en:"Density",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"g/cm3",ru:"г/см3"}},price:{name:{en:"Price",ru:"Цена"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"rub/gr",ru:"руб/гр"}},flexible:{name:{en:"Flexible",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},elastic:{name:{en:"Elastic",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},resistantImpact:{name:{en:"Impact resistant",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},soft:{name:{en:"Soft",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},composite:{name:{en:"Composite",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},resistantUV:{name:{en:"UV resistant",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},resistantWater:{name:{en:"Water resistant",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},dissolvable:{name:{en:"Dissolvable",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},resistantHeat:{name:{en:"Heat resistant",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"°C",ru:"°C"}},resistantChemically:{name:{en:"Chemically resistant",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},resistantFatigue:{name:{en:"Fatigue resistant",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},cutting:{name:{en:"Cutting",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}},grinding:{name:{en:"Grinding",ru:"Прочность"},tip:{en:"The maximum stress that a material can withstand without breaking.",ru:"Максимальная нагрузка, которую материал может выдержать без разрушения."},unit:{en:"",ru:""}}}},7123:(e,a,s)=>{var t=s(5893),i=s(7294),n=s(8840);a.Z=({src:e,alt:a,id:s})=>{const[r,l]=(0,i.useState)(!1),c=(0,i.useRef)(null);return(0,t.jsxs)(t.Fragment,{children:[r||(0,t.jsx)(n.Z,{}),(0,t.jsx)("img",{ref:c,src:e,alt:a,onLoad:()=>{l(!0)},style:{display:r?"block":"none"},id:s})]})}},4378:(e,a,s)=>{var t=s(5893),i=s(7294),n=s(8840);a.Z=({props:e})=>{const[a,s]=(0,i.useState)(!1),r=(0,i.useRef)(null),l=()=>{s(!0)};return(0,i.useEffect)((()=>{const a=new Image;return a.src=e.path,r.current?.appendChild(a),a.addEventListener("load",l),s(!1),()=>{a.removeEventListener("load",l),r.current?.removeChild(a)}}),[e.path]),(0,t.jsxs)("div",{className:"message_image__container",children:[(0,t.jsx)("div",{className:"img__wrapper",ref:r,children:!a&&(0,t.jsx)(n.Z,{})}),(0,t.jsx)("div",{className:"descr__container",children:(0,t.jsx)("span",{children:e.descr})})]})}},4915:(e,a,s)=>{var t=s(5893),i=s(3935),n=s(7294);a.Z=({visible:e,escExit:a,close:s,children:r})=>{const l=document.getElementById("modal"),c=e=>{a&&27===e.keyCode&&s()};return(0,n.useEffect)((()=>(document.addEventListener("keyup",c),()=>{document.removeEventListener("keyup",c)})),[]),l?(0,i.createPortal)((0,t.jsxs)("div",{className:e?"modal-window visible":"modal-window",children:[(0,t.jsx)("button",{className:"closer","aria-label":"close | закрыть",onClick:s,children:(0,t.jsxs)("svg",{width:"32",height:"32",viewBox:"0 0 32 32",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,t.jsx)("path",{fillRule:"evenodd",stroke:"#979797",clipRule:"evenodd",d:"M16 31C24.2843 31 31 24.2843 31 16C31 7.71573 24.2843 1 16 1C7.71573 1 1 7.71573 1 16C1 24.2843 7.71573 31 16 31Z",strokeWidth:"2"}),(0,t.jsx)("path",{d:"M9 9L24 24",strokeWidth:"2",strokeLinecap:"square"}),(0,t.jsx)("path",{d:"M8.49512 23.4586L24.5049 9.54144",strokeWidth:"2",strokeLinecap:"square"})]})}),(0,t.jsx)("div",{className:"content",children:e?r:null})]}),l):(0,t.jsx)("div",{className:"modal-window_absence",children:"Node for Modal Windows was not found"})}},1513:(e,a,s)=>{var t=s(5893),i=s(8595),n=s(7123),r=s(4915),l=s(4378),c=s(7294);a.Z=({lang:e,images:a,imagesPerSlide:s=1})=>{const u=(0,c.useRef)(),m=(0,c.useRef)(),d=(0,c.useRef)(),[h,o]=(0,c.useState)({visible:!1}),[p,x]=(0,c.useState)({descr:"",path:""}),g={perPage:s,gap:"5%",rewind:!0,lazyLoad:!0,updateOnMove:!0,perMove:1,pagination:!0,arrows:!0,drag:!0,speed:500,autoplay:!0,interval:5e3,pauseOnHover:!0,breakpoints:{768:{wheel:!1,perPage:2,pagination:!1},480:{perPage:1}}};return(0,c.useEffect)((()=>(m.current={width:d.current.offsetWidth,height:d.current.offsetHeight},u.current=new i.ZP(d.current,g),u.current.mount(),()=>{u.current?.destroy()})),[]),(0,t.jsxs)("div",{className:"splider_common__wrapper",onClick:s=>(s=>{if("IMG"===s.target.tagName){const t=Number(s.target.id);o({visible:!0}),x({path:a[t].url,descr:a[t].name[e]})}})(s),children:[(0,t.jsx)("div",{className:"splide",ref:d,"aria-label":"The carousel",children:(0,t.jsx)("div",{className:"splide__track",children:(0,t.jsx)("ul",{className:"splide__list",children:a.map(((a,s)=>(0,t.jsx)("li",{className:"splide__slide","data-path":a.url,children:(0,t.jsx)("div",{className:"splide__slide-container",children:(0,t.jsx)(n.Z,{src:a.url,alt:a.name[e],id:String(s)})})},s)))})})}),(0,t.jsx)(r.Z,{visible:h.visible,close:()=>{o({visible:!1})},escExit:!0,children:(0,t.jsx)(l.Z,{props:{path:p.path,descr:p.descr}})})]})}},9735:(e,a,s)=>{s.r(a),s.d(a,{default:()=>_});var t=s(5893),i=s(2886),n=s(3419),r=s(9250),l=s(7294),c=s(4791),u=s(6113),m=s(8840);var d=({pros:e,cons:a,lang:s})=>(0,t.jsxs)("div",{className:"proscons__container",children:[(0,t.jsx)("ul",{className:"pros",children:e.length>0?e.map(((e,a)=>(0,t.jsx)("li",{children:e[s]},a))):null}),(0,t.jsx)("ul",{className:"cons",children:a.length>0?a.map(((e,a)=>(0,t.jsx)("li",{children:e[s]},a))):null})]}),h=s(1513);const o=(e,a)=>{let s={};switch(a){case 10:s={1:{en:"none",ru:"отсутствует"},2:{en:"extremely low",ru:"крайне низкая"},3:{en:"low",ru:"низкая"},4:{en:"poor",ru:"посредственная"},5:{en:"below medium",ru:"ниже средней"},6:{en:"medium",ru:"средняя"},7:{en:"upper medium",ru:"хорошая"},8:{en:"hign",ru:"высокая"},9:{en:"very high",ru:"очень высокая"},10:{en:"exellent",ru:"отличная"}};break;case 3:s={1:{en:"none",ru:"отсутствует"},2:{en:"average",ru:"средняя"},3:{en:"high",ru:"высокая"}}}return s[Number(e)]};var p=s(5375);var x=({params:e,lang:a,fiber:s})=>(0,t.jsx)("div",{className:"features",children:p.O.filter((e=>"maxTemp"!==e)).map(((i,n)=>(0,t.jsxs)("div",{className:"feature__container",children:[("strength"===i||"thermalExpansion"===i||"density"===i)&&(0,t.jsxs)("div",{className:"feature",children:[(0,t.jsxs)("span",{children:[p.B[i].name[a],": "]}),(0,t.jsx)("span",{}),(0,t.jsxs)("span",{children:[e[i]," ",p.B[i].unit[a]]})]}),("stiffnes"===i||"durability"===i||"resistantImpact"===i)&&(0,t.jsxs)("div",{className:"feature",children:[(0,t.jsxs)("span",{children:[p.B[i].name[a],": "]}),(0,t.jsx)("span",{}),(0,t.jsx)("span",{children:o(e.stiffnes,10)[a]})]}),"minTemp"===i&&(0,t.jsxs)("div",{className:"feature",children:[(0,t.jsxs)("span",{children:["en"===a?"Temperetures":"t использования",": "]}),(0,t.jsx)("span",{}),(0,t.jsxs)("span",{children:[e.minTemp," ... ",e.maxTemp," ",p.B[i].unit[a]]})]}),("flexible"===i||"elastic"===i||"soft"===i||"composite"===i||"resistantUV"===i||"resistantWater"===i||"dissolvable"===i||"resistantHeat"===i||"resistantChemically"===i||"resistantFatigue"===i||"cutting"===i||"grinding"===i)&&(0,t.jsxs)("div",{className:"feature",children:[(0,t.jsxs)("span",{children:[p.B[i].name[a],": "]}),(0,t.jsx)("span",{}),(0,t.jsx)("span",{children:o(e[i]+1,3)[a]})]}),"price"===i&&(0,t.jsxs)("div",{className:"feature",children:[(0,t.jsxs)("span",{children:[p.B[i].name[a],": "]}),(0,t.jsx)("span",{}),(0,t.jsxs)("span",{children:[s.params.priceGr," ",p.B.price.unit[a]]})]})]},i)))}),g=s(9655),b=s(4915),j=s(4378);var v=({fiber:e,lang:a,colors:s})=>{const[i,n]=(0,l.useState)({visible:!1}),[r,c]=(0,l.useState)({descr:"",path:""});return(0,t.jsxs)("div",{className:"fiber__item",children:[(0,t.jsx)("h2",{children:e.name[a]}),(0,t.jsx)("div",{className:"fiber__splider__container",children:(0,t.jsx)(h.Z,{images:e.imgs,lang:a,imagesPerSlide:3})}),(0,t.jsx)("div",{className:"fiber__descr__container",children:(0,t.jsxs)("div",{className:"block_text",children:[e.text[a].map(((e,a)=>(0,t.jsx)("p",{children:e.part},a))),(0,t.jsxs)("div",{className:"features__container",children:[(0,t.jsx)("h3",{children:"en"===a?"Features":"Характеристики"}),(0,t.jsx)(x,{params:e.params,fiber:e,lang:a})]}),(0,t.jsxs)("div",{className:"colors",children:[(0,t.jsx)("h3",{children:"en"===a?"Available colors":"Доступные цвета"}),(0,t.jsx)("div",{className:"colors__container",children:e.colors.map(((e,i)=>{const r=s.find((a=>a.id===e));if(r)return(0,t.jsx)("div",{className:"color__container",onClick:e=>((e,s)=>{e.stopPropagation(),c({descr:s.name[a],path:s.url}),n({visible:!0})})(e,r),children:(0,t.jsx)("img",{src:r.url,alt:r.name[a]})},i)}))})]}),(0,t.jsxs)("div",{className:"proscons",children:[(0,t.jsx)("h3",{children:"en"===a?"Summary":"?"}),(0,t.jsx)(d,{...e.proscons,lang:a})]}),(0,t.jsx)(g.OL,{className:"button_blue link_compareList",to:"/fibers/compare",children:"en"===a?"Watch in comparasing":"Посмотреть в сравнении"})]})}),(0,t.jsx)(b.Z,{visible:i.visible,close:()=>{n({visible:!1})},escExit:!0,children:(0,t.jsx)(j.Z,{props:{path:r.path,descr:r.descr}})})]})};const f={loadFibers:i.il,setSelectedFiber:i.Bc},w={loadColors:n.Uf};var _=(0,u.$j)((e=>({lang:e.base.lang,fibers:e.fibers,colors:e.colors})),(e=>({setState:{fibers:(0,c.DE)(f,e),colors:(0,c.DE)(w,e)}})))((({lang:e,fibers:a,colors:s,setState:i})=>{const n=(0,r.UO)().fiberId||"",[c,u]=(0,l.useState)(!1),[d,h]=(0,l.useState)();return(0,l.useEffect)((()=>{"idle"===a.dataLoading.status&&(i.fibers.loadFibers(),u(!1)),"idle"===s.dataLoading.status&&(i.colors.loadColors(),u(!1)),"success"===s.dataLoading.status&&"success"===a.dataLoading.status&&(u(!0),h(a.fibersList.find((e=>e.id===n))),i.fibers.setSelectedFiber(n))}),[s.dataLoading?.status,a.dataLoading?.status,n]),(0,t.jsx)("div",{className:"page page_fiber",children:(0,t.jsx)("div",{className:"container_page",children:(0,t.jsx)("div",{className:"container",children:c&&d?(0,t.jsx)(v,{fiber:d,lang:e,colors:s.colors}):(0,t.jsx)(m.Z,{})})})})}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,