{"version":3,"file":"static/js/123.b09461a4.chunk.js","mappings":"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","sources":["assets/js/ImgWithPreloader.tsx","components/AmountChanger/AmountChanger.tsx","components/MessageImage/MessageImage.tsx","components/MessageInfo/MessageInfo.tsx","components/Modal/Modal.tsx","components/Spliders/Preview/SpliderPreview.tsx","components/AddToCart/AddToCart.tsx","components/tiny/ColorPicker/ColorPicker.tsx","components/ProductDetails/ProductDetails.tsx","pages/Product/Product.tsx","redux/actions/product.ts","../node_modules/uniqid/index.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Preloader from \"../../components/Preloaders/Preloader\";\r\n\r\ninterface IProps {\r\n\tsrc: string\r\n\talt: string\r\n\tid?: string\r\n}\r\n\r\n\r\nconst ImgWithPreloader: React.FC<IProps> = ({src, alt, id}: IProps):JSX.Element => {\r\n\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\tconst img = useRef<HTMLImageElement>(null);\r\n\r\n\tconst hasLoaded = () => {\r\n\t\tsetLoaded(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loaded || <Preloader />}\r\n\t\t\t<img ref={img} src={src} alt={alt} onLoad={hasLoaded} style={{display: loaded ? \"block\" : \"none\"}} id={id} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\nexport default ImgWithPreloader;","import { TLang } from 'src/interfaces'\r\nimport './amount-changer.scss'\r\nimport { useRef, useEffect, useState, useMemo } from \"react\";\r\n\r\ninterface IProps<T> {\r\n    onChange: (idInstance: T, amount: number) => void\r\n    idInstance : T\r\n    lang: TLang,\r\n    initialAmount : number\r\n    reset?: {amount: number}\r\n}\r\n\r\nconst AmountChanger = <T,>({idInstance, onChange, initialAmount, lang, reset}: IProps<T>): JSX.Element => {\r\n\r\n    const [amount, setAmount] = useState<number>(initialAmount)\r\n\r\n    \r\n    const changeAmount = (newAmount: number) => {\r\n        const amountToSet = newAmount >= 0 ? newAmount : 0\r\n        setAmount(amountToSet)\r\n        onChange(idInstance, amountToSet)\r\n    }\r\n\r\n    const onFocusOut = (newAmount: number) => {\r\n        const amountToSet = newAmount > 0 ? newAmount : 1\r\n        setAmount(amountToSet)\r\n        onChange(idInstance, amountToSet)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (reset) {\r\n            setAmount(reset.amount)          \r\n            onChange(idInstance, reset.amount)\r\n        }\r\n    }, [reset])\r\n\r\n    return (\r\n        <div className=\"amount__changer\">\r\n            <button className={amount <= 1 ? \"disabled\" : ''} aria-label='Decrease amount' onClick={(e) => {e.preventDefault(); amount > 1 && changeAmount(amount > 2 ?  amount - 1 : 1)}}>–</button>\r\n            <input onBlur={(e) => onFocusOut(Number(e.target.value))} type=\"text\" value={amount} onChange={(e) => {e.preventDefault(); changeAmount(Number(e.target.value))}} aria-label={lang === 'en' ? \"Enter amount\" : 'Введите количество'}/>\r\n            <button aria-label='Increase amount' onClick={(e) => {e.preventDefault(); changeAmount(amount + 1)}}>+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AmountChanger","import { useState, useEffect, useRef } from 'react'\r\nimport \"./message_image.scss\"\r\nimport Preloader from '../Preloaders/Preloader'\r\n\r\ninterface IProps {\r\n    path: string\r\n    descr: string\r\n}\r\n\r\nconst ModalImage = ({props}: {props: IProps}) => {\r\n\r\n    const [loaded, setLoaded] = useState<boolean>(false)\r\n    const _container = useRef<HTMLDivElement>(null)\r\n    \r\n\r\n    const setStatusLoaded = () => {\r\n        setLoaded(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const _img: HTMLImageElement = new Image;\r\n        _img.src = props.path;\r\n        _container.current?.appendChild(_img)\r\n        _img.addEventListener('load', setStatusLoaded)\r\n        setLoaded(false);\r\n        return () => {\r\n            _img.removeEventListener('load', setStatusLoaded)\r\n            _container.current?.removeChild(_img)\r\n        }\r\n    }, [props.path])\r\n\r\n    \r\n    return (\r\n        <div className=\"message_image__container\">\r\n            <div className=\"img__wrapper\" ref={_container}>\r\n                {!loaded && <Preloader />}\r\n            </div>\r\n            <div className=\"descr__container\">\r\n                <span>{props.descr}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ModalImage","import { useState, useEffect, useRef } from 'react'\r\nimport \"./message_info.scss\"\r\n\r\n\r\n\r\n\r\ninterface IProps {\r\n    status: string\r\n    header: string\r\n    text: string[]\r\n    buttonText: string\r\n    buttonAction: () => void\r\n}\r\n\r\nconst MessageInfo = ({status, header, text, buttonText, buttonAction}: IProps) => {\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div className={`message_info__container ${status}`}>\r\n            <h3>{header}</h3>\r\n            <div className=\"text-block\">\r\n                {text.map((currentText,index) => {\r\n                    return <p key={index}>{currentText}</p>\r\n                })}\r\n            </div>\r\n            <button onClick={buttonAction}>{buttonText}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageInfo","import './modal.scss'\r\nimport { createPortal } from 'react-dom';\r\nimport closeIcon from \"../../assets/img/icon_close.svg\"\r\nimport { useEffect } from 'react';\r\n\r\n\r\ninterface IProps {\r\n    visible: boolean\r\n    escExit: boolean\r\n    close: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\n\r\nconst Modal: React.FC<IProps> = ({visible, escExit, close, children}) => {\r\n    const _modal = document.getElementById('modal') as HTMLElement;\r\n\r\n    const modalKeyListener = (e: KeyboardEvent) => {\r\n        escExit && e.keyCode === 27 && close();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keyup\", modalKeyListener);\r\n        return () => {\r\n            document.removeEventListener(\"keyup\", modalKeyListener);\r\n        }\r\n    }, [])\r\n\r\n    return _modal ? createPortal(\r\n        <div className={visible ? \"modal-window visible\" : \"modal-window\"}>\r\n            <button className=\"closer\" aria-label='close | закрыть' onClick={close}>\r\n                <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" stroke=\"#979797\" clipRule=\"evenodd\" d=\"M16 31C24.2843 31 31 24.2843 31 16C31 7.71573 24.2843 1 16 1C7.71573 1 1 7.71573 1 16C1 24.2843 7.71573 31 16 31Z\" strokeWidth=\"2\"/>\r\n                    <path d=\"M9 9L24 24\"  strokeWidth=\"2\" strokeLinecap=\"square\"/>\r\n                    <path d=\"M8.49512 23.4586L24.5049 9.54144\"  strokeWidth=\"2\" strokeLinecap=\"square\"/>\r\n                </svg>\r\n            </button>\r\n\t\t\t<div className=\"content\">\r\n                {visible ? children : null}\r\n            </div>\r\n        </div>,\r\n        _modal    \r\n    ) \r\n    :\r\n    <div className=\"modal-window_absence\">\r\n        Node for Modal Windows was not found\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Modal;","import { AnyAction, Dispatch, bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect, useMemo, useRef, useState, } from \"react\";\r\nimport \"@splidejs/react-splide/css\";\r\nimport \"./splider-preview.scss\";\r\nimport { IFullState, IImg, IModal, IProduct, IProductState, ISpliderOptions, TLang } from \"src/interfaces\";\r\nimport Splide from \"@splidejs/splide\";\r\nimport ImgWithPreloader from \"src/assets/js/ImgWithPreloader\";\r\nimport { loadProduct } from \"src/redux/actions/product\"\r\nimport Modal from \"src/components/Modal/Modal\";\r\nimport ModalImage from \"src/components/MessageImage/MessageImage\";\r\nconst actionsList = { loadProduct }\r\n\r\n\r\ninterface IPropsState {\r\n\tlang: TLang,\r\n\tproduct: IProductState\r\n}\r\n\r\ninterface IPropsActions {\r\n    setState: {\r\n        product: typeof actionsList\r\n    }\r\n}\r\n\r\ninterface IProps extends IPropsState, IPropsActions {}\r\n\r\ninterface IContainerSize {\r\n\twidth: number\r\n\theight: number\r\n}\r\n\r\n\r\nconst SpliderPreview: React.FC<IProps> = ({ lang, product, setState}): JSX.Element => {\r\n\tconst _splideMain = useRef<HTMLDivElement>(null);\r\n\tconst _splideThumbs = useRef<HTMLDivElement>(null);\r\n\tconst splideMain = useRef<Splide>();\r\n\tconst splideThumb = useRef<Splide>();\r\n\tconst [modal, setModal] = useState<IModal>({visible: false})\r\n\t\t\r\n\tconst optionsThumbs: Partial<ISpliderOptions> = {\r\n\t\tlazyLoad\t: false,\r\n\t\tperPage\t\t: 5,\r\n\t\tgap        \t: '5%',\r\n\t\trewind     \t: false,\r\n\t\tpagination \t: false,\r\n\t\tisNavigation: true,\r\n\t\tfocus\t\t: \"center\",\r\n\t\t//trimSpace: true,\r\n\t\tdirection   : 'ltr',\r\n\t\twheel       : true,\r\n\t\treleaseWheel: true,\r\n\t\theight: '100%',\r\n\t\tbreakpoints\t: {\r\n\t\t\t1600: {\r\n\t\t\t\tperPage: 5\r\n\t\t\t}, \r\n\t\t\t1241: {\r\n\t\t\t\tperPage: 5\r\n\t\t\t}, \r\n\t\t\t992: {\r\n\t\t\t\tperPage: 4\r\n\t\t\t}, \r\n\t\t\t768: {\r\n\t\t\t\tperPage: 3\t,\r\n\t\t\t\tdirection   : 'ltr',\r\n\t\t\t\theight: 'auto',\r\n\t\t\t\tgap: '5%'\r\n\t\t\t}, \r\n\t\t\t480: {\r\n\t\t\t\tperPage: 3\r\n\t\t\t}, \r\n\t\t},\r\n\t};\r\n\r\n\r\n\tconst optionsMain: Partial<ISpliderOptions> = {\r\n\t\tlazyLoad: true,\r\n\t\ttype      : \"fade\",\r\n\t\trewind    : false,\r\n\t\tpagination: false,\r\n\t\tspeed: 500,\r\n\t\twheel: false,\r\n\t\twheelSleep: 300,\r\n\t\tbreakpoints\t: {\r\n\t\t\t768: {\r\n\t\t\t\twheel: false\r\n\t\t\t}, \r\n\t\t}\r\n\t};\r\n\r\n\r\n    /*const showSlide = (slideToGo: number | string) => {\r\n\t\tsplideThumb.current?.go(slideToGo);\r\n\t};*/\r\n\r\n\r\n\t/*function modalKeyListener (e: KeyboardEvent) {\r\n\t\te.keyCode === 37 && showSlide(\"<\");\r\n\t\te.keyCode === 39 && showSlide(\">\");\r\n\t}*/\r\n\r\n\tconst onImageClick = (slide: IImg) => {\r\n\t\tsetModal({visible: true})\r\n\t}\r\n\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetModal({visible: false})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n        if (!_splideThumbs.current || !_splideMain.current) return\r\n\t\tsplideThumb.current = new Splide(_splideThumbs.current, optionsThumbs);\r\n\t\tsplideMain.current = new Splide(_splideMain.current, optionsMain);\r\n\t\tsplideMain.current.sync(splideThumb.current);\r\n\t\tsplideMain.current.mount();\r\n\t\tsplideThumb.current.mount();\r\n        \r\n\t\treturn () => {\r\n\t\t\tsplideThumb.current?.destroy();\r\n\t\t\tsplideMain.current?.destroy();\r\n            //setState.product.setSelectedImage(splideMain.current?.index || 0)\r\n\t\t};\r\n\t\t\r\n\t}, []);\r\n\r\n\t\r\n\t/*useEffect(() => {\r\n\t\tshowSlide(product.selectedImage);\r\n\t\tdocument.addEventListener(\"keyup\", modalKeyListener);\r\n\t\t//document.querySelector(\"body\")?.classList.add(\"noscroll\");\r\n\t\treturn (() => {\r\n\t\t\tdocument.removeEventListener(\"keyup\", modalKeyListener);\r\n\t\t});\r\n\t}, [product.selectedImage]);*/\r\n\r\n\r\n\r\n\r\n\treturn (\r\n        <div className=\"splider_preview\">\r\n\t\t\t<div id=\"modalMain\" className=\"splide\" ref={_splideMain}>\r\n\t\t\t\t<div className=\"splide__track\">\r\n\t\t\t\t\t<ul className=\"splide__list\">\r\n\t\t\t\t\t\t{product.imgs.map((slide,i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li className=\"splide__slide\" key={i} onClick={() => onImageClick(slide)}>\r\n\t\t\t\t\t\t\t\t\t<ImgWithPreloader src={slide.url} alt={slide.name[lang]} />\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"modalThumbs\" className=\"splide\" ref={_splideThumbs}>\r\n\t\t\t\t<div className=\"splide__track\">\r\n\t\t\t\t\t<ul className=\"splide__list\">\r\n\t\t\t\t\t\t{product.imgs.map((slide,i ) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li className=\"splide__slide\" key={i}>\r\n\t\t\t\t\t\t\t\t\t<ImgWithPreloader src={slide.url} alt={slide.name[lang]} />\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Modal {...{visible: modal.visible, close: closeModal, escExit: true}}>\r\n\t\t\t\t<ModalImage props={{path: product.imgs[splideMain.current?.index || 0].url, descr: product.imgs[splideMain.current?.index || 0].name[lang]}}/>\r\n\t\t\t</Modal> \r\n\r\n        </div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = (state: IFullState): IPropsState  => {\r\n\treturn {\r\n\t\tproduct: state.product,\r\n\t\tlang: state.base.lang\r\n\t};\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): IPropsActions => ({\r\n    setState: {\r\n\t\tproduct: bindActionCreators(actionsList, dispatch)\r\n\t}\r\n})\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SpliderPreview);\r\n","import { ICartItem, ICartState, IColor, IFiber, IFullState, IModal, IProduct, TLang, TLangText } from 'src/interfaces';\r\nimport './add-to-cart.scss'\r\nimport { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport { addItem, saveCart } from \"src/redux/actions/cart\"\r\nimport { AnyAction, bindActionCreators } from \"redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"src/components/Modal/Modal\";\r\nimport MessageInfo from '../MessageInfo/MessageInfo';\r\nimport AmountChanger from '../AmountChanger/AmountChanger';\r\nvar uniqid = require('uniqid');\r\n\r\n\r\nconst actionsListCart = { addItem, saveCart }\r\n\r\n\r\ninterface IPropsState {\r\n    cart: ICartState\r\n    lang: TLang\r\n}\r\n\r\ninterface IPropsParent extends IPropsState {\r\n    product : IProduct\r\n    type: TLangText | undefined\r\n    fiber: IFiber['id'] | undefined\r\n    color: IColor['id']\r\n}\r\n\r\n\r\ninterface IPropsActions {\r\n    setState: {\r\n        cart: typeof actionsListCart\r\n    }\r\n}\r\n\r\ninterface IProps extends IPropsParent, IPropsActions {}\r\n\r\n\r\ninterface IMessageCart {\r\n    //color: string\r\n    //type: string\r\n    header: string\r\n    status: string\r\n    //fiber: string\r\n    //amount: number\r\n    text: string[]\r\n}\r\n\r\n\r\n\r\n\r\nconst AddToCart: React.FC<IProps> = ({product, type, fiber, color, lang, cart, setState}): JSX.Element => {\r\n    const [amount, setAmount] = useState<number>(1)\r\n\tconst [modal, setModal] = useState<IModal>({visible: false})\r\n    const [message, setMessage] = useState<IMessageCart>({header: '', status: '', text: []})\r\n    const [amountChangerReset, setAmountChangerReset] = useState<{amount: number}>({amount: 1})\r\n\r\n    const closeModal = () => {\r\n\t\tsetModal({visible: false})\r\n\t}\r\n\r\n    \r\n    \r\n    const addToCart = () => {\r\n        const errorsList: string[] = []\r\n        !color && errorsList.push(lang === 'en' ? 'Please choose the color' : 'Пожалуйста, выберите цвет')\r\n        !fiber && errorsList.push(lang === 'en' ? 'Please choose the fiber' : 'Пожалуйста, выберите материал')\r\n        !type && errorsList.push(lang === 'en' ? 'Please choose the type' : 'Пожалуйста, выберите версию')\r\n        !amount && errorsList.push(lang === 'en' ? 'Please set the amount' : 'Пожалуйста, укажите количество')\r\n\r\n        if (!color || !fiber || !type || !amount) {\r\n            setMessage({\r\n                status: 'error',\r\n                header: lang === 'en' ? 'Error' : 'Ошибка',\r\n                text: errorsList\r\n            })\r\n        } else {\r\n            const newItem: ICartItem = {\r\n                product, \r\n                fiber, \r\n                color, \r\n                amount, \r\n                type, \r\n                id: uniqid()\r\n            }\r\n            setState.cart.addItem(newItem)\r\n            setState.cart.saveCart([...cart.items, newItem]);\r\n            //setAmount(1)\r\n            setAmountChangerReset({amount: 1})\r\n            const amountItemsInCart = cart.items.reduce((total, item) => total + item.amount, 0) + amount\r\n            setMessage({\r\n                status: 'success',\r\n                header: lang === 'en' ? 'Added' : 'Добавлено',\r\n                text: lang === 'en' ? [`This item has been added to your сart.`, `You now have ${amountItemsInCart} item${amountItemsInCart > 1 ? 's' : ''} in your сart`, ] : [`Этот товар был успешно добавлен в Вашу корзину.`, `Сейчас у Вас товаров в корзине: ${amountItemsInCart}`, ]\r\n            })\r\n        }\r\n        setModal({visible: true})\r\n\r\n    }\r\n\r\n\r\n    const onAmountChange = (item: IProduct['id'], amount: number) => {\r\n        setAmount(amount)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cart-adder\">\r\n                <span>{lang === 'en' ? 'Amount' : 'Количество'}: </span>\r\n                <div className=\"amount-changer__container\">\r\n                    <AmountChanger<IProduct['id']> idInstance={product.id} initialAmount={amount} reset={amountChangerReset} lang={lang} onChange={onAmountChange} />\r\n                </div>\r\n                <button className='button_news' title='Add to cart' onClick={addToCart}>{lang === 'en' ? 'Add to cart' : 'Добавить в корзину'}</button>\r\n            </div>\r\n            <Modal {...{visible: modal.visible, close: closeModal, escExit: true}}>\r\n            <MessageInfo {...{  \r\n                    status: message.status,\r\n                    header: message.header,\r\n                    text: message.text, \r\n                    buttonText: lang === 'en' ? 'Close' : \"Закрыть\", \r\n                    buttonAction: closeModal\r\n                }}/>\r\n            </Modal> \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: IFullState): IPropsState => ({\r\n    cart: state.cart,\r\n    lang: state.base.lang\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): IPropsActions => ({\r\n    setState: {\r\n        cart: bindActionCreators(actionsListCart, dispatch),\r\n\t}\r\n})\r\n  \r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToCart);","import './color-picker.scss'\r\nimport { ICartState, IColor, IModal, IModalImg, TLang } from \"src/interfaces\";\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport Modal from 'src/components/Modal/Modal';\r\nimport ModalImage from 'src/components/MessageImage/MessageImage';\r\n\r\n\r\ninterface IPropsState {\r\n    colors: IColor[]\r\n    lang: TLang\r\n    onSelect: (id: IColor['id']) => void\r\n}\r\n\r\n\r\n\r\n\r\nconst ColorPicker: React.FC<IPropsState> = ({lang, colors, onSelect}): JSX.Element => {\r\n\r\n    const [currentColor, setCurrentColor] = useState<IColor>()\r\n    const [expanded, setExpanded] = useState<boolean>(false)\r\n\tconst [modal, setModal] = useState<IModal>({visible: false})\r\n\tconst [modalImg, setModalImg] = useState<IModalImg>({descr: '', path: ''})\r\n\r\n    const onCurrentClick = () => {\r\n        setExpanded(prev => !prev)\r\n    }\r\n\r\n    const onOptionClick = (id: IColor['id']) => {\r\n        setCurrentColor(colors.find(color => color.id === id))\r\n        setExpanded(false)\r\n        onSelect(id)\r\n    }\r\n\r\n\r\n    const onImageClick = (e: React.MouseEvent , color: IColor) => {\r\n        e.stopPropagation()\r\n\t\tsetModalImg({descr: color.name[lang], path: color.url})\r\n        setModal({visible: true})\r\n    }\r\n\r\n    \r\n    const closeModal = () => {\r\n\t\tsetModal({visible: false})\r\n\t}\r\n\r\n    return (\r\n        <div className={`color-picker ${expanded ? 'expanded' : ''}`}>\r\n            <div className=\"option current\" onClick={onCurrentClick}>\r\n                {currentColor ? \r\n                    <>\r\n                        <div className=\"img__container\">\r\n                            <img src={currentColor.url} alt={currentColor.name[lang]} />\r\n                        </div>\r\n                        <span>{currentColor.name[lang]}</span>\r\n                    </>\r\n                    :\r\n                    <span>{lang === 'en' ? 'Choose the fiber before' : 'Сначала выберите материал'} </span>\r\n                }\r\n            </div>\r\n            <div className='list'>\r\n                {colors.map(color => {\r\n                    return (\r\n                        <div className=\"option\" key={color.id} onClick={() => onOptionClick(color.id)} >\r\n                            <div className=\"img__container\" >\r\n                                <img src={color.url} alt={color.name[lang]} />\r\n                            </div>\r\n                            <span>{color.name[lang]}</span>\r\n                            <span onClick={(e) => onImageClick(e, color)}>{lang === 'en' ? '(details)' : '(детальнее)'}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Modal {...{visible: modal.visible, close: closeModal, escExit: true}}>\r\n\t\t\t\t<ModalImage props={{path: modalImg.path, descr: modalImg.descr}}/>\r\n\t\t\t</Modal> \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n  \r\n\r\nexport default ColorPicker;\r\n","import { ICartState, ICategories, IColor, IColorsState, IFiber, IFibersState, IFullState, IModal, IModalImg, IProductState, TId, TLang, TLangText, TLangTextArr } from 'src/interfaces'\r\nimport './product-details.scss'\r\nimport { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport { AnyAction, bindActionCreators } from \"redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadProduct } from \"src/redux/actions/product\"\r\nimport { loadFibers } from \"src/redux/actions/fibers\"\r\nimport { loadColors } from \"src/redux/actions/colors\"\r\nimport AddToCart from '../AddToCart/AddToCart';\r\nimport Modal from '../Modal/Modal';\r\nimport MessageInfo from '../MessageInfo/MessageInfo';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ColorPicker from '../tiny/ColorPicker/ColorPicker';\r\nimport ModalImage from '../MessageImage/MessageImage';\r\n//import { addItem } from \"src/redux/actions/cart\"\r\n\r\n\r\nconst actionsListProduct = { loadProduct }\r\nconst actionsListColors = { loadColors }\r\nconst actionsListFibers = { loadFibers }\r\n//const actionsListCart = { addItem }\r\n\r\ninterface IPropsState {\r\n\tselectedCategory: TId\r\n\tselectedProduct: TId\r\n\tlang: TLang\r\n\tcategories: ICategories\r\n    product: IProductState\r\n    colors: IColorsState\r\n    fibers: IFibersState\r\n    //cart: ICartState\r\n}\r\n\r\ninterface IPropsActions {\r\n    setState: {\r\n        product: typeof actionsListProduct,\r\n        colors: typeof actionsListColors,\r\n        fibers: typeof actionsListFibers,\r\n        //cart: typeof actionsListCart\r\n    }\r\n}\r\n\r\ninterface IProps extends IPropsState, IPropsActions {}\r\n\r\n\r\n\r\nconst ProductDetails: React.FC<IProps> = ({lang, setState, product, colors, fibers }): JSX.Element => {\r\n\r\n    const [fibersDetailed, setFibersDetailed] = useState<IFiber[]>([])\r\n    const [selectedFiber, setSelectedFiber] = useState<IFiber>()\r\n    const [selectedColor, setSelectedColor] = useState<IColor[\"id\"]>('')\r\n    const [selectedType, setSelectedType] = useState<any>(undefined)\r\n\r\n    const _type = useRef<HTMLSelectElement>(null)\r\n\r\n    \r\n    const onChangeFiber: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\r\n        setSelectedFiber(fibers.fibersList.find(fiber => fiber.id === e.target.value))\r\n        setSelectedColor('')        \r\n    }\r\n\r\n\r\n    const onSelectColor = (colorId: IColor[\"id\"]) => {\r\n        setSelectedColor(colorId)\r\n    }\r\n\r\n    const onChangeType: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\r\n        setSelectedType(product.mods[Number(e.target.value)]);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (colors.dataLoading.status === 'success' && fibers.dataLoading.status === 'success' && product.dataLoading.status === 'success') {\r\n            setFibersDetailed(product.fibers.map((productFiber) => {\r\n                return fibers.fibersList.find(fiberItem => fiberItem.id === productFiber)\r\n            }).filter(fiber => fiber?.id !== undefined) as IFiber[])\r\n        }\r\n\r\n        \r\n    },[fibers.dataLoading.status, colors.dataLoading.status, product.dataLoading.status])\r\n        \r\n    return (\r\n        <div className=\"details__descr\">\r\n            <h2>{lang === 'en' ? 'Features' : 'Характеристики'}:</h2>\r\n            <div className=\"features__container\">\r\n                <div className=\"feature\">\r\n                    <span>{lang === 'en' ? 'Description' : 'Описание'}: </span>\r\n                    {product.text[lang].map((text, i) => <p key={i}>{text.part}</p>)}\r\n                </div>\r\n                {product.features.map((feature, i) => {\r\n                    return (\r\n                        <div className=\"feature\" key={i}>\r\n                            <span>{feature.name[lang]}: </span>\r\n                            <span>{feature.value[lang]}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <div className=\"feature\">\r\n                    <span>{lang === 'en' ? 'Price' : 'Цена'}: </span>\r\n                    <span>{product.price[lang]}</span>\r\n                </div>\r\n                \r\n                {product.mods.length > 0 ? \r\n                    <div className=\"feature wrap_xs\">\r\n                        <label htmlFor=\"type\">{lang === 'en' ? 'Version' : 'Версия'}: \r\n                        </label>\r\n                        <select id=\"type\" ref={_type} defaultValue={'-1'} onChange={onChangeType}>\r\n                            <option key={-1} value={'-1'} disabled hidden>{lang === 'en' ? 'Select type' : 'Выберите тип'}</option>\r\n                            {product.mods.map((mod, i) => <option key={i} value={i}>{mod[lang]}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"feature wrap_xs\">\r\n                <label htmlFor=\"fiber\">\r\n                    {selectedFiber ? \r\n                        <NavLink to={`../../fibers/${selectedFiber.id}`} aria-label={lang === 'en' ? '(About selected fiber)' : ' (О выбранном материале)'}>\r\n                            {lang === 'en' ? 'Fiber' : 'Материал'}:\r\n                        </NavLink>\r\n                        :\r\n                        <>{lang === 'en' ? 'Fiber' : 'Материал'}:</>    \r\n                    }\r\n                </label>\r\n\r\n                    <select id=\"fiber\" onChange={onChangeFiber} defaultValue={''}>\r\n                        <option key={-1} disabled hidden value={''}>{lang === 'en' ? 'Select fiber' : 'Выберите материал'}</option>\r\n                        {fibersDetailed.map((fiber, i) => <option key={i} value={fiber.id}>{fiber.short.name[lang]}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"colors__container wrap_xs\">\r\n                    <span>{lang === 'en' ? 'Available colors' : 'Доступные цвета'}: </span>\r\n                    <div className=\"colors__wrapper\">\r\n                        <ColorPicker lang={lang} colors={colors.colors.filter(color => selectedFiber?.colors.includes(color.id))} onSelect={onSelectColor}/>\r\n                    </div>\r\n                </div>\r\n    \r\n                \r\n            </div>\r\n            <AddToCart \r\n                product={product} \r\n                type={product.mods.length > 0 ? selectedType : {en: '-', ru: '-'}} \r\n                fiber={selectedFiber?.id} \r\n                color={selectedColor}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state: IFullState): IPropsState => ({\r\n    lang: state.base.lang,\r\n\tselectedCategory: state.catalog.selectedCategory,\r\n\tcategories: state.catalog.categories,\r\n\tselectedProduct: state.catalog.selectedProduct,\r\n    product: state.product,\r\n    colors: state.colors,\r\n    fibers: state.fibers,\r\n    //cart: state.cart\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): IPropsActions => ({\r\n    setState: {\r\n        product: bindActionCreators(actionsListProduct, dispatch),\r\n        colors: bindActionCreators(actionsListColors, dispatch),\r\n        fibers: bindActionCreators(actionsListFibers, dispatch),\r\n        //cart: bindActionCreators(actionsListCart, dispatch),\r\n\t}\r\n})\r\n  \r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);\r\n","import \"./product.scss\"\r\nimport { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport { useNavigate, useParams  } from \"react-router-dom\"\r\nimport Preloader from 'src/components/Preloaders/Preloader';\r\nimport { AnyAction, bindActionCreators } from \"redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { ICategories, IColorsState, IFibersState, IFullState, IProductState, TId, TLang } from \"src/interfaces\";\r\nimport SpliderPreview from \"src/components/Spliders/Preview/SpliderPreview\";\r\nimport { loadProduct } from \"src/redux/actions/product\"\r\nimport { loadFibers } from \"src/redux/actions/fibers\"\r\nimport { loadColors } from \"src/redux/actions/colors\"\r\nimport ProductDetails from \"src/components/ProductDetails/ProductDetails\";\r\n\r\n\r\n\r\nconst actionsListProduct = { loadProduct }\r\nconst actionsListColors = { loadColors }\r\nconst actionsListFibers = { loadFibers }\r\n//const actionsListCatalog = { setSelectedProduct }\r\n\r\ninterface IPropsState {\r\n\tselectedCategory: TId\r\n\t//selectedProduct: TId\r\n\tlang: TLang\r\n\tcategories: ICategories\r\n    product: IProductState\r\n    colors: IColorsState\r\n    fibers: IFibersState\r\n}\r\n\r\ninterface IPropsActions {\r\n    setState: {\r\n        product: typeof actionsListProduct,\r\n        colors: typeof actionsListColors,\r\n        fibers: typeof actionsListFibers,\r\n    }\r\n}\r\n\r\ninterface IProps extends IPropsState, IPropsActions {}\r\n\r\n\r\nconst Product: React.FC<IProps> = ({lang, setState, product, colors, fibers }): JSX.Element => {\r\n    const paramProductId = useParams().productId || ''\r\n    const [loaded, setLoaded] = useState<boolean>(false)\r\n    \r\n    useEffect(() => {\r\n        if (paramProductId !== product.id) {\r\n            setState.product.loadProduct(paramProductId)\r\n            setLoaded(false)\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (fibers.dataLoading.status === 'idle') {\r\n            setState.fibers.loadFibers()\r\n            setLoaded(false)\r\n        }\r\n    }, [fibers.dataLoading.status])\r\n\r\n\r\n    useEffect(() => {\r\n        if (colors.dataLoading.status === 'idle') {\r\n            setState.colors.loadColors()\r\n            setLoaded(false)\r\n        }\r\n    }, [colors.dataLoading.status])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (colors.dataLoading.status === 'success' && fibers.dataLoading.status === 'success' && product.dataLoading.status === 'success') {\r\n            setLoaded(true)\r\n        }\r\n\r\n\r\n    },[fibers.dataLoading.status, colors.dataLoading.status, product.dataLoading.status])\r\n    \r\n\r\n    return (\r\n        <div className=\"page page_product-details\">\r\n            <div className=\"container_page\">\r\n                <div className=\"container\">\r\n                    <h1>{product.name[lang]}</h1>\r\n                    {loaded ? \r\n                        <div className=\"details__block\">\r\n                            <div className=\"details__splider\">\r\n                                <SpliderPreview />\r\n                            </div>\r\n                            <div className=\"details__descr-order\">\r\n                                <ProductDetails />\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        <Preloader />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state: IFullState): IPropsState => ({\r\n    lang: state.base.lang,\r\n\tselectedCategory: state.catalog.selectedCategory,\r\n\tcategories: state.catalog.categories,\r\n\t//selectedProduct: state.catalog.selectedProduct,\r\n    product: state.product,\r\n    colors: state.colors,\r\n    fibers: state.fibers\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): IPropsActions => ({\r\n    setState: {\r\n        product: bindActionCreators(actionsListProduct, dispatch),\r\n        colors: bindActionCreators(actionsListColors, dispatch),\r\n        fibers: bindActionCreators(actionsListFibers, dispatch),\r\n\t}\r\n})\r\n  \r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\r\n","import { IAction, IProductState, ICategoriesListItem, ICategory, ICategoryReceived, IDispatch, IProduct } from \"src/interfaces\"\r\nimport mockFibers from '../mocks/fibers'\r\nimport catalogFull from \"../mocks/catalogFull\";\r\nimport { actionsListProduct } from './actionsList'\r\nimport mockProducts from \"../mocks/catalogFull\";\r\n\r\n\r\nexport const setLoadDataStatusProduct = <T extends IProductState[\"dataLoading\"]>(payload: T):IAction<T> => ({\r\n    type: actionsListProduct.SET_LOAD_DATA_STATUS_PRODUCT,\r\n    payload\r\n});\r\n\r\n\r\nexport const setProduct = <T extends Omit<IProductState, \"dataLoading\">>(payload: T):IAction<T> => ({\r\n    type: actionsListProduct.SET_DATA_PRODUCT,\r\n    payload\r\n});\r\n/*\r\nexport const setSelectedImage = <T extends IProductState[\"selectedImage\"]>(payload: T):IAction<T> => ({\r\n    type: actionsListProduct.SET_SELECTED_IMAGE,\r\n    payload\r\n});\r\n*/\r\n\r\n\r\nexport const loadProduct = (id: IProduct[\"id\"]) => {\r\n    return async function(dispatch: IDispatch) {\r\n        dispatch(setLoadDataStatusProduct({status: 'loading', message: `Loading product ${id}`}))\r\n        try {\r\n            new Promise((res, rej) => {\r\n                setTimeout(() => {\r\n                    const product = mockProducts.find(product => product.id === id)\r\n                    if (product) {\r\n                        console.log(`product ${id} loaded`);\r\n                        res(product)\r\n                    } else (\r\n                        rej({mesasage: `product ${id} not found`})\r\n                    )\r\n                }, 1000)\r\n            }).then((data) => {\r\n                dispatch(setProduct(data as IProduct))\r\n                dispatch(setLoadDataStatusProduct({status: 'success', message: `Product id=${id} loaded`}))\r\n            }).catch(err => {\r\n                dispatch(setLoadDataStatusProduct({status: 'error', message: `ERROR while loading product id=${id}: ${err}`}))\r\n            })\r\n\r\n        } catch (e) {\r\n            dispatch(setLoadDataStatusProduct({status: 'error', message: `ERROR while loading product id=${id}: ${e}`}))\r\n        }\r\n    }\r\n}\r\n\r\n","/* \n(The MIT License)\nCopyright (c) 2014-2021 Halász Ádám <adam@aimform.com>\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//  Unique Hexatridecimal ID Generator\n// ================================================\n\n//  Dependencies\n// ================================================\nvar pid = typeof process !== 'undefined' && process.pid ? process.pid.toString(36) : '' ;\nvar address = '';\nif(typeof __webpack_require__ !== 'function' && typeof require !== 'undefined'){\n    var mac = '', os = require('os'); \n    if(os.networkInterfaces) var networkInterfaces = os.networkInterfaces();\n    if(networkInterfaces){\n        loop:\n        for(let interface_key in networkInterfaces){\n            const networkInterface = networkInterfaces[interface_key];\n            const length = networkInterface.length;\n            for(var i = 0; i < length; i++){\n                if(networkInterface[i] !== undefined && networkInterface[i].mac && networkInterface[i].mac != '00:00:00:00:00:00'){\n                    mac = networkInterface[i].mac; break loop;\n                }\n            }\n        }\n        address = mac ? parseInt(mac.replace(/\\:|\\D+/gi, '')).toString(36) : '' ;\n    }\n} \n\n//  Exports\n// ================================================\nmodule.exports = module.exports.default = function(prefix, suffix){ return (prefix ? prefix : '') + address + pid + now().toString(36) + (suffix ? suffix : ''); }\nmodule.exports.process = function(prefix, suffix){ return (prefix ? prefix : '') + pid + now().toString(36) + (suffix ? suffix : ''); }\nmodule.exports.time    = function(prefix, suffix){ return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\n//  Helpers\n// ================================================\nfunction now(){\n    var time = Date.now();\n    var last = now.last || time;\n    return now.last = time > last ? time : last + 1;\n}\n"],"names":["_ref","src","alt","id","loaded","setLoaded","useState","img","useRef","_jsxs","_Fragment","children","_jsx","Preloader","ref","onLoad","hasLoaded","style","display","idInstance","onChange","initialAmount","lang","reset","amount","setAmount","changeAmount","newAmount","amountToSet","useEffect","className","onClick","e","preventDefault","onBlur","onFocusOut","Number","target","value","type","props","_container","setStatusLoaded","_container$current","_img","Image","path","current","appendChild","addEventListener","_container$current2","removeEventListener","removeChild","descr","status","header","text","buttonText","buttonAction","map","currentText","index","visible","escExit","close","_modal","document","getElementById","modalKeyListener","keyCode","createPortal","width","height","viewBox","fill","xmlns","fillRule","stroke","clipRule","d","strokeWidth","strokeLinecap","actionsList","loadProduct","connect","state","product","base","dispatch","setState","bindActionCreators","_splideMain$current2","_splideMain$current3","_splideMain","_splideThumbs","splideMain","splideThumb","modal","setModal","optionsThumbs","lazyLoad","perPage","gap","rewind","pagination","isNavigation","focus","direction","wheel","releaseWheel","breakpoints","optionsMain","speed","wheelSleep","Splide","sync","mount","_splideThumb$current","_splideMain$current","destroy","imgs","slide","i","ImgWithPreloader","url","name","Modal","closeModal","ModalImage","uniqid","require","actionsListCart","addItem","saveCart","cart","fiber","color","message","setMessage","amountChangerReset","setAmountChangerReset","AmountChanger","onAmountChange","item","title","addToCart","errorsList","push","newItem","items","amountItemsInCart","reduce","total","MessageInfo","colors","onSelect","currentColor","setCurrentColor","expanded","setExpanded","modalImg","setModalImg","onCurrentClick","prev","onOptionClick","find","onImageClick","stopPropagation","actionsListProduct","actionsListColors","loadColors","actionsListFibers","loadFibers","selectedCategory","catalog","categories","selectedProduct","fibers","fibersDetailed","setFibersDetailed","selectedFiber","setSelectedFiber","selectedColor","setSelectedColor","selectedType","setSelectedType","undefined","_type","dataLoading","productFiber","fibersList","fiberItem","filter","part","features","feature","price","mods","length","htmlFor","defaultValue","disabled","hidden","mod","NavLink","to","short","ColorPicker","includes","colorId","AddToCart","en","ru","paramProductId","useParams","productId","SpliderPreview","ProductDetails","setLoadDataStatusProduct","payload","SET_LOAD_DATA_STATUS_PRODUCT","setProduct","SET_DATA_PRODUCT","async","Promise","res","rej","setTimeout","mockProducts","console","log","mesasage","then","data","catch","err","pid","process","toString","now","time","Date","last","module","exports","prefix","suffix"],"sourceRoot":""}