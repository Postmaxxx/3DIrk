{"version":3,"file":"static/js/175.505ce1bd.chunk.js","mappings":"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","sources":["assets/js/ImgWithPreloader.tsx","components/AmountChanger/AmountChanger.tsx","components/MessageImage/MessageImage.tsx","components/MessageInfo/MessageInfo.tsx","components/Modal/Modal.tsx","redux/actions/order.ts","components/Delete/Delete.tsx","components/Preloaders/PreloaderW.tsx","components/CartContent/CartContent.tsx","assets/img/icon_file_question.svg","components/AddFiles/AddFiles.tsx","pages/Order/Order.tsx","redux/actions/product.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Preloader from \"../../components/Preloaders/Preloader\";\r\n\r\ninterface IProps {\r\n\tsrc: string\r\n\talt: string\r\n\tid?: string\r\n}\r\n\r\n\r\nconst ImgWithPreloader: React.FC<IProps> = ({src, alt, id}: IProps):JSX.Element => {\r\n\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\tconst img = useRef<HTMLImageElement>(null);\r\n\r\n\tconst hasLoaded = () => {\r\n\t\tsetLoaded(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loaded || <Preloader />}\r\n\t\t\t<img ref={img} src={src} alt={alt} onLoad={hasLoaded} style={{display: loaded ? \"block\" : \"none\"}} id={id} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\nexport default ImgWithPreloader;","import { TLang } from 'src/interfaces'\r\nimport './amount-changer.scss'\r\nimport { useRef, useEffect, useState, useMemo } from \"react\";\r\n\r\ninterface IProps<T> {\r\n    onChange: (idInstance: T, amount: number) => void\r\n    idInstance : T\r\n    lang: TLang,\r\n    initialAmount : number\r\n    reset?: {amount: number}\r\n}\r\n\r\nconst AmountChanger = <T,>({idInstance, onChange, initialAmount, lang, reset}: IProps<T>): JSX.Element => {\r\n\r\n    const [amount, setAmount] = useState<number>(initialAmount)\r\n\r\n    \r\n    const changeAmount = (newAmount: number) => {\r\n        const amountToSet = newAmount >= 0 ? newAmount : 0\r\n        setAmount(amountToSet)\r\n        onChange(idInstance, amountToSet)\r\n    }\r\n\r\n    const onFocusOut = (newAmount: number) => {\r\n        const amountToSet = newAmount > 0 ? newAmount : 1\r\n        setAmount(amountToSet)\r\n        onChange(idInstance, amountToSet)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (reset) {\r\n            setAmount(reset.amount)          \r\n            onChange(idInstance, reset.amount)\r\n        }\r\n    }, [reset])\r\n\r\n    return (\r\n        <div className=\"amount__changer\">\r\n            <button className={amount <= 1 ? \"disabled\" : ''} aria-label='Decrease amount' onClick={(e) => {e.preventDefault(); amount > 1 && changeAmount(amount > 2 ?  amount - 1 : 1)}}>–</button>\r\n            <input onBlur={(e) => onFocusOut(Number(e.target.value))} type=\"text\" value={amount} onChange={(e) => {e.preventDefault(); changeAmount(Number(e.target.value))}} aria-label={lang === 'en' ? \"Enter amount\" : 'Введите количество'}/>\r\n            <button aria-label='Increase amount' onClick={(e) => {e.preventDefault(); changeAmount(amount + 1)}}>+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AmountChanger","import { useState, useEffect, useRef } from 'react'\r\nimport \"./message_image.scss\"\r\nimport Preloader from '../Preloaders/Preloader'\r\n\r\ninterface IProps {\r\n    path: string\r\n    descr: string\r\n}\r\n\r\nconst ModalImage = ({props}: {props: IProps}) => {\r\n\r\n    const [loaded, setLoaded] = useState<boolean>(false)\r\n    const _container = useRef<HTMLDivElement>(null)\r\n    \r\n\r\n    const setStatusLoaded = () => {\r\n        setLoaded(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const _img: HTMLImageElement = new Image;\r\n        _img.src = props.path;\r\n        _container.current?.appendChild(_img)\r\n        _img.addEventListener('load', setStatusLoaded)\r\n        setLoaded(false);\r\n        return () => {\r\n            _img.removeEventListener('load', setStatusLoaded)\r\n            _container.current?.removeChild(_img)\r\n        }\r\n    }, [props.path])\r\n\r\n    \r\n    return (\r\n        <div className=\"message_image__container\">\r\n            <div className=\"img__wrapper\" ref={_container}>\r\n                {!loaded && <Preloader />}\r\n            </div>\r\n            <div className=\"descr__container\">\r\n                <span>{props.descr}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ModalImage","import { useState, useEffect, useRef } from 'react'\r\nimport \"./message_info.scss\"\r\n\r\n\r\n\r\n\r\ninterface IProps {\r\n    status: string\r\n    header: string\r\n    text: string[]\r\n    buttonText: string\r\n    buttonAction: () => void\r\n}\r\n\r\nconst MessageInfo = ({status, header, text, buttonText, buttonAction}: IProps) => {\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div className={`message_info__container ${status}`}>\r\n            <h3>{header}</h3>\r\n            <div className=\"text-block\">\r\n                {text.map((currentText,index) => {\r\n                    return <p key={index}>{currentText}</p>\r\n                })}\r\n            </div>\r\n            <button onClick={buttonAction}>{buttonText}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageInfo","import './modal.scss'\r\nimport { createPortal } from 'react-dom';\r\nimport closeIcon from \"../../assets/img/icon_close.svg\"\r\nimport { useEffect } from 'react';\r\n\r\n\r\ninterface IProps {\r\n    visible: boolean\r\n    escExit: boolean\r\n    close: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\n\r\nconst Modal: React.FC<IProps> = ({visible, escExit, close, children}) => {\r\n    const _modal = document.getElementById('modal') as HTMLElement;\r\n\r\n    const modalKeyListener = (e: KeyboardEvent) => {\r\n        escExit && e.keyCode === 27 && close();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keyup\", modalKeyListener);\r\n        return () => {\r\n            document.removeEventListener(\"keyup\", modalKeyListener);\r\n        }\r\n    }, [])\r\n\r\n    return _modal ? createPortal(\r\n        <div className={visible ? \"modal-window visible\" : \"modal-window\"}>\r\n            <button className=\"closer\" aria-label='close | закрыть' onClick={close}>\r\n                <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" stroke=\"#979797\" clipRule=\"evenodd\" d=\"M16 31C24.2843 31 31 24.2843 31 16C31 7.71573 24.2843 1 16 1C7.71573 1 1 7.71573 1 16C1 24.2843 7.71573 31 16 31Z\" strokeWidth=\"2\"/>\r\n                    <path d=\"M9 9L24 24\"  strokeWidth=\"2\" strokeLinecap=\"square\"/>\r\n                    <path d=\"M8.49512 23.4586L24.5049 9.54144\"  strokeWidth=\"2\" strokeLinecap=\"square\"/>\r\n                </svg>\r\n            </button>\r\n\t\t\t<div className=\"content\">\r\n                {visible ? children : null}\r\n            </div>\r\n        </div>,\r\n        _modal    \r\n    ) \r\n    :\r\n    <div className=\"modal-window_absence\">\r\n        Node for Modal Windows was not found\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Modal;","import { IAction, ICartItem, ICartState, IDataLoading, IDataSending, IDispatch, IOrderState, TLang, TLangText } from \"src/interfaces\"\r\nimport { actionsListOrder } from './actionsList'\r\n\r\nexport const setName = <T extends string>(payload: T):IAction<T> => ({\r\n    type: actionsListOrder.SET_ORDER_NAME,\r\n    payload\r\n});\r\n\r\nexport const setPhone = <T extends string>(payload: T):IAction<T> => ({\r\n    type: actionsListOrder.SET_ORDER_PHONE,\r\n    payload\r\n});\r\n\r\nexport const setEmail = <T extends string>(payload: T):IAction<T> => ({\r\n    type: actionsListOrder.SET_ORDER_EMAIL,\r\n    payload\r\n});\r\n\r\nexport const setMessage = <T extends string>(payload: T):IAction<T> => ({\r\n    type: actionsListOrder.SET_ORDER_MESSAGE,\r\n    payload\r\n});\r\n\r\nexport const clearFiles = <T>():IAction<T> => ({\r\n    type: actionsListOrder.CLEAR_ORDER_FILES,\r\n});\r\n\r\n\r\nexport const clearForm = <T>():IAction<T> => ({\r\n    type: actionsListOrder.CLEAR_ORDER_FORM,\r\n});\r\n\r\n\r\nexport const addFiles = <T extends File[]>(payload: T):IAction<T> => ({\r\n    type: actionsListOrder.ADD_ORDER_FILES,\r\n    payload\r\n});\r\n\r\n\r\nexport const setSendDataStatus = <T extends IDataSending>(payload: T):IAction<T> => ({\r\n    type: actionsListOrder.SET_SEND_DATA_STATUS_ORDER,\r\n    payload\r\n});\r\n\r\n\r\ninterface ISendOrder {\r\n    lang: TLang\r\n    text: string\r\n    filesArr: File[]\r\n    cart: ICartState\r\n    informer: (message: TLangText) => void\r\n}\r\n\r\nconst minTimeBetweenSendings = 1000; //in ms\r\n\r\nexport const sendOrder = ({lang, text, filesArr, cart, informer}: ISendOrder) => {\r\n    return async function(dispatch: IDispatch) {\r\n        const urlMessage= `https://api.telegram.org/bot${process.env.REACT_APP_TG_TOK}/sendMessage`;\r\n        const urlDocument= `https://api.telegram.org/bot${process.env.REACT_APP_TG_TOK}/sendDocument`;\r\n        \r\n        dispatch(setSendDataStatus({status: 'sending', message: `Sending message`}))\r\n       \r\n        await fetch(urlMessage, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                chat_id: process.env.REACT_APP_CHT_ID,\r\n                text\r\n              })\r\n            })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    dispatch(setSendDataStatus({status: 'error', message: lang === 'en' ? `Error while sending a message. HTTP error, status: ${res.status}. Try again later.` : `Ошибка http при отправке сообщения, статус: ${res.status}. Пожалуйста, попробуйте позже.`}))\r\n                    return\r\n                }\r\n            })\r\n            .then(data => {})\r\n            .catch(err => {\r\n                dispatch(setSendDataStatus({status: 'error', message: lang === 'en' ? `Error while sending a message: ${err.message}. Please try again later.` : `Ошибка при отправке сообщения: ${err.message}. Пожалуйста, попробуйте позже.`}))\r\n                return\r\n        });\r\n\r\n        filesArr.reduce(async (acc: Promise<string>, file: File, i) => {\r\n            await acc\r\n            const message = {\r\n                en: `Files to send left: ${filesArr.length - i}`, \r\n                ru: `Осталось отправить файлов: ${filesArr.length - i}`\r\n            }\r\n            informer(message)\r\n            return new Promise<string>(async (res, rej) => {\r\n                const timeStart = Date.now()\r\n                const formData: FormData = new FormData();\r\n                formData.append('chat_id', process.env.REACT_APP_CHT_ID || '');\r\n                formData.append('document', file, file.name);\r\n                const options = {method: 'POST', body: formData};\r\n                \r\n                await fetch(urlDocument, options)\r\n                    .then(res => {\r\n                        if (!res.ok) {\r\n                            dispatch(setSendDataStatus({status: 'error', message: lang === 'en' ? `Error while sending files. HTTP error, status: ${res.status}. Try again later.` : `Ошибка http при отправке файлов, статус: ${res.status}. Пожалуйста, попробуйте позже.`}))\r\n                            rej(lang === 'en' ? `Error while sending file \"${file.name}\": ${res.status}. Sending files has been aborted.` : `Error при отправке файла \"${file.name}\": ${res.status}. Отправка файлов прервана.`)\r\n                        }\r\n                    })\r\n                    .then(data => {\r\n                        const transitionSending = Date.now() - timeStart\r\n                        setTimeout(() => { // if (sendingTime < minTimeBetweenSendings) => wait until (sendingTime >= minTimeBetweenSendings)\r\n                            res(`File ${file.name} has been sent successfully`)\r\n                        }, minTimeBetweenSendings - transitionSending)\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch(setSendDataStatus({status: 'error', message: lang === 'en' ? `Your message has been sent succesfully, but the error has been occured while sending a file:, ${file.name}, error: ${error.message}` : `Ваше сообщение было успешно отправлено, но возникла ошибка при отправке файла: ${file.name}, ошибка: ${error.message}`}))\r\n                        rej(lang === 'en' ? `Error while sending file \"${file.name}\": ${error.message}. Sending files has been aborted.` : `Error при отправке файла \"${file.name}\": ${error.message}. Отправка файлов прервана.`)\r\n                    })\r\n            })\r\n\r\n        }, Promise.resolve('Files sending started'))\r\n            .then(data => {\r\n                dispatch(setSendDataStatus({status: 'success', message: lang === 'en' ? `Your message ${filesArr.length > 0 ? \"and files have\" : \"has\"} been sent` : `Ваше сообщение ${filesArr.length > 0 ? \"и вложения были успешно отправлены\" : \"было успешно отправлено\"}`, }))\r\n            })\r\n            .catch(err => {\r\n                dispatch(setSendDataStatus({status: 'error', message: lang === 'en' ? `The error occur while saving files: ${err}` : `Возникла ошибка при отправке файлов: ${err}` }))\r\n            })\r\n    }\r\n}","import { ICartItem, ICartState, TLang } from \"src/interfaces\"\r\nimport './delete.scss'\r\nimport { useState, useEffect } from 'react'\r\n\r\ninterface IProps<T> {\r\n    remove: (idInstance: T) => void\r\n    idInstance : T\r\n    lang: TLang\r\n}\r\n\r\nconst Delete = <T,>({remove, idInstance, lang}: IProps<T>):JSX.Element => {\r\n\r\n    const [confirmation, setConfirmation] = useState<boolean>(false)\r\n\r\n            \r\n    const onCancel = () => {\r\n        setConfirmation(false);\r\n        \r\n    }\r\n\r\n    const onConfirm = () => {\r\n        setConfirmation(false)\r\n        remove(idInstance)\r\n    }\r\n\r\n    const onDelete = () => {\r\n        setConfirmation(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"button_delete__container\" onClick={onDelete} aria-label={lang === 'en' ? \"Delete\" : 'Удалить'}>\r\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enableBackground=\"new 0 0 1000 1000\">\r\n                <path d=\"M262.7,101.9c0-33.8,12.1-45.9,45.9-45.9h382.8c33.8,0,45.9,12.1,45.9,45.9v23.6h45.9V71.3c0-33.8-27.4-61.3-61.3-61.3H278c-33.8,0-61.3,27.4-61.3,61.3v54.2h45.9V101.9z\"/>\r\n                <path d=\"M959.4,148.5H40.6c-16.9,0-30.6,10.3-30.6,23s13.7,23,30.6,23h918.8c16.9,0,30.6-10.3,30.6-23S976.3,148.5,959.4,148.5z\"/>\r\n            </svg>\r\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enableBackground=\"new 0 0 1000 1000\">\r\n                <path d=\"M728.7,913.4c0,16.9-13.7,30.6-30.6,30.6H300c-16.9,0-30.6-13.7-30.6-30.6L192.8,239h-45.9l76.6,720.3c0,16.9,13.7,30.6,30.6,30.6h490c16.9,0,30.6-13.7,30.6-30.6L851.2,239h-45.9L728.7,913.4z\"/>\r\n                <path d=\"M366,882.8c12.7,0,23-13.7,23-30.6L343,300.9c0-16.9-10.3-30.6-23-30.6s-23,13.7-23,30.6L343,852.2C343,869.1,353.3,882.8,366,882.8z\"/>\r\n                <path d=\"M524.9,852.2V300.9c0-16.9-10.3-30.6-23-30.6c-12.7,0-23,13.7-23,30.6v551.3c0,16.9,10.3,30.6,23,30.6C514.6,882.8,524.9,869.1,524.9,852.2z\"/>\r\n                <path d=\"M660.8,852.2l45.9-551.3c0-16.9-10.3-30.6-23-30.6s-23,13.7-23,30.6l-45.9,551.3c0,16.9,10.3,30.6,23,30.6S660.8,869.1,660.8,852.2z\"/>\r\n            </svg>\r\n            <div className={`confirmation__container ${confirmation ? 'active' : ''}`}>\r\n                <button onClick={(e) => {e.preventDefault(); e.stopPropagation(); onConfirm()}}>{lang === 'en' ? 'Delete' : 'Удалить'}</button>\r\n                <button onClick={(e) => {e.preventDefault(); e.stopPropagation(); onCancel()} }>{lang === 'en' ? 'Cancel' : 'Отмена'}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Delete","import './preloaderW.scss'\r\n\r\n\r\nconst PreloaderW:React.FC= ():JSX.Element => {\r\n    return (\r\n        <div className=\"preloader_w\">\r\n            <div className=\"dash dash_1\"></div>\r\n            <div className=\"dash dash_2\"></div>\r\n            <div className=\"dash dash_3\"></div>\r\n            <div className=\"dash dash_4\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PreloaderW","import { AnyAction, bindActionCreators } from \"redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport './cart-content.scss'\r\nimport { ICartItem, ICartState, IColor, IColorsState, IFiber, IFibersState, IFullState, IModal, IModalImg, IProduct, IProductState, TLang } from \"src/interfaces\";\r\nimport { changeItem, saveCart, removeItem }  from \"src/redux/actions/cart\"\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { loadFibers } from \"src/redux/actions/fibers\"\r\nimport { loadColors } from \"src/redux/actions/colors\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Delete from \"../Delete/Delete\";\r\nimport Preloader from \"../Preloaders/Preloader\";\r\nimport { setProduct, setLoadDataStatusProduct }  from \"src/redux/actions/product\"\r\nimport AmountChanger from \"../AmountChanger/AmountChanger\";\r\nimport PreloaderW from \"../Preloaders/PreloaderW\";\r\nimport ImgWithPreloader from \"src/assets/js/ImgWithPreloader\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalImage from \"../MessageImage/MessageImage\";\r\n\r\n\r\nconst actionsCartList = { changeItem, saveCart, removeItem }\r\nconst actionsListColors = { loadColors }\r\nconst actionsListFibers = { loadFibers }\r\nconst actionsListProduct = { setProduct, setLoadDataStatusProduct  }\r\n\r\n\r\n\r\ninterface IPropsState {\r\n    lang: TLang,\r\n    cart: ICartState,\r\n    product: IProductState\r\n    colors: IColorsState\r\n    fibers: IFibersState\r\n}\r\n\r\ninterface IPropsActions {\r\n    setState: {\r\n        cart: typeof actionsCartList,\r\n        colors: typeof actionsListColors,\r\n        fibers: typeof actionsListFibers,\r\n        product: typeof actionsListProduct\r\n    }\r\n}\r\n\r\ninterface IProps extends IPropsState, IPropsActions {}\r\n\r\nconst CartContent: React.FC<IProps> = ({lang, cart, colors, fibers, setState}): JSX.Element => {\r\n\r\n    const [cartReady, setCartReady] = useState<boolean>(false)\r\n\tconst [modal, setModal] = useState<IModal>({visible: false})\r\n\tconst [modalImg, setModalImg] = useState<IModalImg>({descr: '', path: ''})\r\n  \r\n    useEffect(() => {\r\n        if (cart.dataLoading.status !== 'loading'){\r\n            setState.cart.saveCart(cart.items)\r\n        }\r\n    }, [cart.items])\r\n\r\n\r\n    const deleteItem = (item: ICartItem) => {\r\n        setState.cart.removeItem(item)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (colors.dataLoading.status === 'success' && fibers.dataLoading.status === 'success' &&  cart.dataLoading.status === 'success') {\r\n            setCartReady(true)\r\n        }\r\n    }, [colors.dataLoading.status, fibers.dataLoading.status, cart.dataLoading.status])\r\n\r\n\r\n    const onProductClick = (product: IProduct) => {\r\n        setState.product.setLoadDataStatusProduct({status: 'success', message: ''})\r\n        setState.product.setProduct(product)\r\n    }\r\n\r\n    const onAmountChange = (item: ICartItem, amount: number) => {\r\n        setState.cart.changeItem({...item, amount})\r\n    }\r\n\r\n\r\n    \r\n    const onImageClick = (e: React.MouseEvent , color: IColor | undefined) => {\r\n        if (!color) return\r\n        e.stopPropagation()\r\n        setModalImg({descr: color.name[lang], path: color.url})\r\n        setModal({visible: true})\r\n    }\r\n\r\n    \r\n    const closeModal = () => {\r\n\t\tsetModal({visible: false})\r\n\t}\r\n\r\n\r\n    return (\r\n        <div className=\"cart-content\">\r\n            {cartReady ? \r\n                cart.items.length > 0 ? \r\n                <>\r\n                    {cart.items.map((item, i) => {\r\n                        const fiber = fibers.fibersList.find(fiberItem => fiberItem.id === item.fiber)?.short.name[lang]\r\n                        const color: IColor | undefined = colors.colors.find(color => color.id === item.color)\r\n                        return(\r\n                            <div className=\"cart__item\" key={item.id}>\r\n                                <NavLink className=\"item__product-link_img\" to={`../catalog/${item.product.id}`} onClick={() => onProductClick(item.product)} aria-label={lang === 'en' ? 'Go to product' : 'Перейти к товару'}>\r\n                                    <div className=\"img__container\">\r\n                                        <ImgWithPreloader src={item.product.imgs[0].url} alt={item.product.imgs[0].name[lang]}/>\r\n                                    </div>\r\n                                </NavLink>\r\n\r\n\r\n                                <div className=\"item-descr__container\">\r\n                                    <div className=\"item__block\">\r\n                                        <span aria-label={lang === 'en' ? \"Go to product page\" : 'Перейти на страницу продукта'}>{item.product.name[lang]}</span>\r\n                                    </div>\r\n                                    {item.type ? \r\n                                        <div className=\"item__block\">\r\n                                            <span>{lang === 'en' ? 'Type' : 'Модификация'}:</span>\r\n                                            <span className=\"fiber\">{item.type[lang]}</span>\r\n                                        </div>\r\n                                    : \r\n                                    null}\r\n                                    <div className=\"item__block\">\r\n                                        <span>{lang === 'en' ? 'Fiber' : 'Материал'}:</span>\r\n                                        <span className=\"fiber\">{fiber}</span>\r\n                                    </div>\r\n                                    <div className=\"item__block\">\r\n                                        <span>{lang === 'en' ? 'Color' : 'Цвет'}:</span>\r\n                                        <div className=\"colors__container\" onClick={(e) => onImageClick(e, color)}> \r\n                                            <div className=\"color__container\">\r\n                                                <img src={color?.url} alt={color?.name[lang]} />\r\n                                            </div>\r\n                                            <span className=\"color__name\">({color?.name[lang]})</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item__amount-delete\">\r\n                                    <div className=\"delete__container\">\r\n                                        <div className=\"delete__wrapper\">\r\n                                            <Delete<ICartItem> remove={deleteItem} idInstance={item} lang={lang}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"amount__container\">\r\n                                        <AmountChanger<ICartItem> idInstance={item} initialAmount={item.amount} lang={lang} onChange={onAmountChange} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })} \r\n                </>\r\n                : \r\n                <h3 className=\"cart_empty__text\">{lang === 'en' ? 'Your cart is empty' : 'Ваша корзина пуста'}</h3>\r\n            :\r\n            <PreloaderW />\r\n        } \r\n            <Modal {...{visible: modal.visible, close: closeModal, escExit: true}}>\r\n                    <ModalImage props={{path: modalImg.path, descr: modalImg.descr}}/>\r\n            </Modal> \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state: IFullState): IPropsState => ({\r\n    cart: state.cart,\r\n    lang: state.base.lang,\r\n    product: state.product,\r\n    colors: state.colors,\r\n    fibers: state.fibers,\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): IPropsActions => ({\r\n    setState: {\r\n\t\tcart: bindActionCreators(actionsCartList, dispatch),\r\n        colors: bindActionCreators(actionsListColors, dispatch),\r\n        fibers: bindActionCreators(actionsListFibers, dispatch),\r\n\t\tproduct: bindActionCreators(actionsListProduct, dispatch),\r\n\t}\r\n})\r\n  \r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContent);\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgIconFileQuestion(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    shapeRendering: \"geometricPrecision\",\n    textRendering: \"geometricPrecision\",\n    imageRendering: \"optimizeQuality\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    viewBox: \"0 0 411 512.07\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M411 485.29c0 7.44-3 14.1-7.85 18.95-4.82 4.83-11.5 7.83-18.82 7.83H26.79c-7.32 0-14.12-3-18.94-7.83C3 499.39 0 492.73 0 485.29V26.79c0-7.45 3-14.13 7.85-18.95C12.67 3 19.33 0 26.79 0h230.02c4.58 0 8.77 2.08 11.51 5.49l128.61 125.23c4.48 4.37 14.07 12.4 14.07 19.38v335.19zM180.88 363.2c0-8.56.61-16.24 1.86-23.04 1.21-6.83 3.33-12.96 6.35-18.34 2.96-5.38 7.09-10.16 12.26-14.29 4.52-3.56 8.39-6.98 11.56-10.4 3.22-3.36 5.68-6.73 7.45-10.05 1.75-3.37 2.65-6.69 2.65-10.06 0-6.73-1.4-11.62-4.27-14.57-2.87-2.93-7.14-4.44-12.81-4.44-16.35 0-17.96 13.1-17.96 30.49h-53.34c.21-15.44 3.51-36.54 9.81-45.91 6.32-9.43 14.82-16.3 25.54-20.61 10.7-4.34 22.72-6.49 35.95-6.49 21.91 0 39.1 4.92 51.62 14.78 12.52 9.85 18.81 24.58 18.81 44.13 0 8.45-1.66 15.64-4.88 21.62-3.27 5.99-7.53 11.57-12.87 16.74a2252.96 2252.96 0 0 1-17.9 16.85c-5.73 4.92-9.55 9.79-11.51 14.58-1.96 4.83-3.07 11.16-3.37 19.01h-44.95zm-6.32 44.03c0-7.85 2.71-14.38 8.08-19.56 5.44-5.22 12.42-7.84 21.07-7.84 8.75 0 15.79 2.62 21.17 7.84 5.32 5.18 7.98 11.71 7.98 19.56 0 7.74-2.66 14.27-7.98 19.5-5.38 5.28-12.42 7.9-21.17 7.9-8.65 0-15.63-2.62-21.07-7.9-5.37-5.23-8.08-11.76-8.08-19.5zm100.2-357.88 89.5 83.83h-89.5V49.35zM384.13 163.1c0 105.36.1 216.67.1 322.1H26.89V26.75h217.94v121.32c0 8.24 6.67 15.03 15.02 15.03h124.28z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconFileQuestion);\nexport default __webpack_public_path__ + \"static/media/icon_file_question.62eabd8e5dc7cba97ab78672ece533e8.svg\";\nexport { ForwardRef as ReactComponent };","import { TLang } from 'src/interfaces'\r\nimport './add-files.scss'\r\nimport { useState, useEffect, useRef, forwardRef, useImperativeHandle} from 'react'\r\nimport iconFileQuestion from '../../assets/img/icon_file_question.svg'\r\nimport Delete from \"src/components/Delete/Delete\";\r\n\r\ninterface IProps {\r\n    lang: TLang\r\n    saveFiles: (files: File[]) => void\r\n}\r\n\r\nexport interface IAddFilesFunctions {\r\n    clearAttachedFiles: () => void;\r\n}\r\n\r\nconst AddFiles = forwardRef<IAddFilesFunctions, IProps>(({lang, saveFiles}, ref) => {\r\n    useImperativeHandle(ref, () => ({\r\n        clearAttachedFiles() {\r\n            setFiles([])\r\n        }    \r\n      }));\r\n\r\n    const _dropArea = useRef<HTMLDivElement>(null)\r\n    const _files = useRef<HTMLInputElement>(null)\r\n    const _filesGallery = useRef<HTMLDivElement>(null)\r\n    let dragCounter: number = 0\r\n    const [files, setFiles] = useState<File[]>([])\r\n\r\n    \r\n    \r\n    const preventDefaults = (e: DragEvent | React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    const dragEnter = (e: DragEvent) => {\r\n        preventDefaults(e)\r\n        dragCounter++\r\n        _dropArea.current?.classList.add('active')\r\n    }\r\n\r\n    const dragOver = (e: DragEvent) => {\r\n        preventDefaults(e)\r\n        _dropArea.current?.classList.add('active')\r\n    }\r\n\r\n    const dragLeave = (e: DragEvent) => {\r\n        preventDefaults(e)\r\n        dragCounter--\r\n        if (dragCounter === 0) {\r\n            _dropArea.current?.classList.remove('active')\r\n        }\r\n    }\r\n\r\n    \r\n    const dragDrop = (e: DragEvent) => {\r\n        preventDefaults(e)\r\n        _dropArea.current?.classList.remove('active')\r\n        setFiles(prev => [...prev, ...(e.dataTransfer?.files as FileList)])\r\n    }\r\n    \r\n    const onSelectFiles = () => {       \r\n        _dropArea.current?.classList.remove('active')\r\n        setFiles(prev => [...prev, ...(_files.current?.files as FileList)])\r\n    }\r\n\r\n    const clearFiles = () => {\r\n        setFiles([])\r\n    }\r\n\r\n\r\n    const previewFiles = (arrayOfFiles: File[]) => {\r\n        \r\n        (_filesGallery.current as HTMLDivElement).innerHTML = '';\r\n        const imageTypes: string[] = ['jpg', 'jpeg', 'bmp', 'svg', 'png', 'tiff', 'webp'];\r\n        arrayOfFiles.reduce(async (acc: Promise<string>, currentFile: File) => {\r\n            await acc\r\n            return new Promise<string>((res) => {\r\n                acc.then(() => {\r\n                    const reader =  new FileReader();\r\n                    reader.readAsDataURL(currentFile)\r\n                    reader.onloadend = () => {\r\n                        let _containerObj: HTMLDivElement = document.createElement('div')\r\n                        let _containerImg: HTMLDivElement = document.createElement('div')\r\n                        let _descr: HTMLSpanElement = document.createElement('span')\r\n                        let _img: HTMLImageElement = document.createElement('img')\r\n                        _img.src = (imageTypes.includes(currentFile.name.split('.').pop() || '')) ? reader.result as string : iconFileQuestion;\r\n                        _descr.innerText = currentFile.name;\r\n                        _filesGallery.current?.appendChild(_containerObj)\r\n                        _containerImg.appendChild(_img)\r\n                        _containerObj.appendChild(_containerImg)\r\n                        _containerObj.appendChild(_descr)\r\n                        res(`File ${currentFile.name} added`)\r\n                    }\r\n                })\r\n            })\r\n        }, Promise.resolve('Files array is empty'))\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!_dropArea.current) { return }\r\n        \r\n        _dropArea.current.addEventListener('dragenter', dragEnter, false);\r\n        _dropArea.current.addEventListener('dragover', dragOver, false);\r\n        _dropArea.current.addEventListener('dragleave', dragLeave, false);\r\n        _dropArea.current.addEventListener('drop', dragDrop, false);\r\n        return () => {\r\n            _dropArea.current?.removeEventListener('dragenter', dragEnter, false);\r\n            _dropArea.current?.removeEventListener('dragover', dragOver, false);\r\n            _dropArea.current?.removeEventListener('dragleave', dragLeave, false);\r\n            _dropArea.current?.removeEventListener('drop', dragDrop, false);\r\n        }\r\n\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        previewFiles(files)\r\n        saveFiles(files)\r\n    }, [files])\r\n\r\n\r\n\r\n    const remove = (idInstance: string) => {\r\n        clearFiles()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"drop-area\" ref={_dropArea}>\r\n            <svg width=\"16\" height=\"25\" viewBox=\"0 0 16 25\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M7.31719 23.7322C7.71856 24.1116 8.35148 24.0937 8.73084 23.6924L14.9129 17.1516C15.2923 16.7502 15.2745 16.1173 14.8731 15.7379C14.4717 15.3586 13.8388 15.3764 13.4594 15.7778L7.96424 21.5918L2.15022 16.0966C1.74885 15.7172 1.11593 15.7351 0.73657 16.1365C0.357206 16.5378 0.375048 17.1707 0.776422 17.5501L7.31719 23.7322ZM6.36655 0.404461L7.00449 23.0336L9.00369 22.9773L8.36576 0.348102L6.36655 0.404461Z\"/>\r\n            </svg>\r\n            <div className=\"link__container\">\r\n                <label htmlFor=\"files\">{lang === 'en' ? 'Add files' : 'Выберите файлы'}</label> \r\n                <span>{lang === 'en' ? ' or drag it here' : 'для добавления или перетащите их сюда'}</span>\r\n            </div>\r\n            <input id=\"files\" type=\"file\" multiple onChange={onSelectFiles} ref={_files}/>\r\n            <div className=\"preview-gallery\" ref={_filesGallery}></div>\r\n            <div className=\"clear-files\">\r\n                <Delete<string> remove={remove} idInstance=\"cartCleaner\" lang={lang}/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default AddFiles","import { AnyAction, bindActionCreators } from \"redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport './order.scss'\r\nimport { ICartItem, ICartState, IColorsState, IFibersState, IFullState, IModal, IOrderState, TLang, TLangText, TLangTextArr } from \"src/interfaces\";\r\nimport { useState, useEffect, useRef, KeyboardEventHandler } from 'react'\r\nimport Modal from \"src/components/Modal/Modal\";\r\nimport MessageInfo from \"src/components/MessageInfo/MessageInfo\";\r\nimport { setName, setEmail, setPhone, setMessage, clearFiles, clearForm, addFiles, sendOrder, setSendDataStatus }  from \"../../redux/actions/order\"\r\nimport CartContent from \"src/components/CartContent/CartContent\";\r\nimport AddFiles, { IAddFilesFunctions } from \"src/components/AddFiles/AddFiles\";\r\nimport { loadFibers } from \"src/redux/actions/fibers\"\r\nimport { loadColors } from \"src/redux/actions/colors\"\r\nimport { clearCart } from \"src/redux/actions/cart\"\r\n\r\nconst actionsListOrder = { setName, setEmail, setPhone, setMessage, clearFiles, clearForm, addFiles, sendOrder, setSendDataStatus  }\r\nconst actionsListColors = { loadColors }\r\nconst actionsListFibers = { loadFibers }\r\nconst actionsListCart = { clearCart }\r\n\r\n\r\ninterface IPropsState {\r\n    lang: TLang,\r\n    order: IOrderState\r\n    cart: ICartState\r\n    colors: IColorsState\r\n    fibers: IFibersState\r\n}\r\n\r\ninterface IPropsActions {\r\n    setState: {\r\n        order: typeof actionsListOrder\r\n        colors: typeof actionsListColors,\r\n        fibers: typeof actionsListFibers,\r\n        cart: typeof actionsListCart,\r\n    }\r\n}\r\n\r\ninterface IProps extends IPropsState, IPropsActions {}\r\n\r\n\r\ninterface IMessage {\r\n    status: string\r\n    header: string\r\n    text: string[]\r\n}\r\n\r\ninterface ICheckErrorItem {\r\n    ref: React.RefObject<HTMLInputElement | HTMLTextAreaElement>\r\n    name: TLangText\r\n}\r\n\r\nconst Order:React.FC<IProps> = ({lang, order, cart, colors, fibers, setState}): JSX.Element => {\r\n\r\n    const _name = useRef<HTMLInputElement>(null)\r\n    const _email = useRef<HTMLInputElement>(null)\r\n    const _phone = useRef<HTMLInputElement>(null)\r\n    const _message = useRef<HTMLTextAreaElement>(null)\r\n\tconst [modal, setModal] = useState<IModal>({visible: false})\r\n    const addFilesRef = useRef<IAddFilesFunctions>(null)\r\n    const [message, setMessage] = useState<IMessage>({status: '', header: '', text: []})\r\n\r\n\r\n    const closeModal = () => {\r\n\t\tsetModal({visible: false})\r\n        if (order.dataSending.status === 'success') {\r\n            setState.order.clearFiles();\r\n            setState.order.clearForm();\r\n            addFilesRef.current?.clearAttachedFiles()\r\n            setState.cart.clearCart()\r\n        }\r\n        setState.order.setSendDataStatus({status: 'idle', message: ''})\r\n\t}\r\n\r\n\r\n    const checkErrors = (): boolean => {\r\n        const feildsToCheck: Array<ICheckErrorItem> = [\r\n            {ref: _name, name: {en: 'Your name', ru: 'Ваше имя'}},\r\n            {ref: _email, name: {en: 'Your email', ru: 'Ваша почта'}},\r\n            {ref: _phone, name: {en: 'Your phone', ru: 'Ваш телефон'}},\r\n            {ref: _message, name: {en: 'Information about the order', ru: 'Информация о заказе'}},\r\n        ]\r\n        let isWrong: boolean = false\r\n        setMessage(prev => ({status: 'error', header: lang === 'en' ? 'Errors found' : 'Обнаружены ошибки', text: []}))\r\n        feildsToCheck.forEach(field => {\r\n            if (!field.ref.current?.checkValidity()) {\r\n                setMessage(prev => ({...prev, text: prev.text.concat(lang === 'en' ? `Field \"${field.name[lang]}\" is incorrect` : `Поле \"${field.name[lang]}\" заполнено неверно`)}))\r\n                field.ref.current?.parentElement?.classList.add('error')\r\n                isWrong = true\r\n            }\r\n        })\r\n        return isWrong\r\n    }\r\n\r\n\r\n        \r\n    const preventDefaults = (e: DragEvent | React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n\r\n    const onSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        preventDefaults(e)\r\n        const currentDate: Date = new Date();\r\n        const name:string =  order.name;\r\n        const phone:string = order.phone;\r\n        const email:string = order.email;\r\n        const message:string = order.message;\r\n        if (checkErrors()) {\r\n            setModal({visible: true})\r\n            return\r\n        }\r\n        \r\n       // console.log(cart.items);\r\n\r\n        const textCart = cart.items.reduce((text: string, item: ICartItem, i: number) => {\r\n            \r\n            return text + `${i+1}) ${item.product.name[lang]}\r\n${lang === 'en' ? 'Options' : 'Версия'}: ${item.type} \r\n${lang === 'en' ? 'Fiber' : 'Материал'}: ${fibers.fibersList.find(fiberItem => fiberItem.id === item.fiber)?.short.name[lang]}\r\n${lang === 'en' ? 'Color' : 'Цвет'}: ${colors.colors.find(color => color.id === item.color)?.name[lang]}\r\n${lang === 'en' ? 'Amount' : 'Количество'}: ${item.amount}\\n\\n`\r\n        }, '')\r\n\r\n        const textOrder: string = `\r\n${lang === 'en' ? 'Date' : 'Дата'}: ${currentDate.toISOString().slice(0,10)}\r\n${lang === 'en' ? 'Time' : 'Время'}: ${currentDate.toISOString().slice(11, 19)}\r\n${lang === 'en' ? 'Name' : 'Имя'}: ${name}\r\n${lang === 'en' ? 'Email' : 'Почта'}: ${email}\r\n${lang === 'en' ? 'Phone' : 'Телефон'}: ${phone}\r\n${lang === 'en' ? 'Message' : 'Сообщение'}: ${message}`;\r\n\r\n        const text = `${lang === 'en' ? 'New order' : 'Новый заказ'}:${textOrder}\\n\\n\\n ${lang === 'en' ? 'Cart content' : 'Содержимое корзины'}: \\n${textCart}${order.files.length > 0 ? (lang==='en' ? '\\n\\n\\nAttached files:' : '\\n\\n\\nПрикрепленные файлы:') : ''}`\r\n        \r\n        setState.order.sendOrder({lang, text, filesArr: order.files, cart, informer})\r\n    }\r\n\r\n\r\n    const informer = (message: TLangText) => {\r\n        setMessage({\r\n            status: '',\r\n            header: lang === 'en' ? \"Sending order...\" : \"Отправка заказа...\",\r\n            text: [message[lang]],\r\n        })\r\n        setModal({visible: true})\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (order.dataSending.status === 'success' || order.dataSending.status === 'error') {\r\n            setMessage({\r\n                status: order.dataSending.status,\r\n                header: order.dataSending.status === 'success' ? lang === 'en' ? \"Success\" : \"Отправлено\" : lang === 'en' ? \"Error\" : \"Ошибка\",\r\n                text: [order.dataSending.message],\r\n            })\r\n            setModal({visible: true})\r\n        }\r\n    }, [order.dataSending.status])\r\n\r\n\r\n\r\n\r\n\r\n    const clearError = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => { \r\n        (e.target as HTMLElement).parentElement?.classList.remove('error')\r\n    }\r\n\r\n\r\n    const focusNext = ({e, target}: {e: KeyboardEvent, target: HTMLInputElement | HTMLTextAreaElement | null}) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            target?.focus();\r\n        }\r\n    }\r\n\r\n\r\n    const onChangeText: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (e) => {\r\n        switch (e.target.id) {\r\n            case \"name\":\r\n                setState.order.setName(e.target.value)\r\n                break;\r\n            case \"phone\":\r\n                setState.order.setPhone(e.target.value)\r\n                break;\r\n            case \"email\":\r\n                setState.order.setEmail(e.target.value)\r\n                break;\r\n            case \"message\":\r\n                setState.order.setMessage(e.target.value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        clearError(e)\r\n    }\r\n\r\n\r\n    const saveFiles = (files: File[]) => {\r\n        setState.order.clearFiles()\r\n        setState.order.addFiles(files)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"page_order\">\r\n            <div className='container_page'>\r\n                <div className=\"container\">\r\n                    <div className=\"page_order\">\r\n                        <h1>{lang === 'en' ? 'Order 3D printing' : 'Заказать 3D печать'}</h1>\r\n                        <div className=\"order__block\">\r\n\r\n                            <form className=\"order__container\">\r\n                                <h2>{lang === 'en' ? 'Make an order' : 'Отправить заявку'}</h2>\r\n                                <div className=\"data-block\">\r\n\r\n                                    <div className=\"inputs-block\">\r\n                                        <div className=\"input-block\">\r\n                                            <label htmlFor=\"name\">\r\n                                                {lang === 'en' ? 'Your name*' : 'Ваше имя*'}\r\n                                            </label>\r\n                                            <input \r\n                                                className=\"input-element\" \r\n                                                id=\"name\" \r\n                                                type=\"text\" \r\n                                                required \r\n                                                min={2} \r\n                                                max={25} \r\n                                                ref={_name} \r\n                                                value={order.name}\r\n                                                onChange={onChangeText} \r\n                                                onKeyDown={(e:any) => focusNext({e, target: _phone.current})}/>\r\n                                        </div>\r\n                                        <div className=\"input-block\">\r\n                                            <label htmlFor=\"phone\">\r\n                                                {lang === 'en' ? 'Your phone' : 'Ваш телефон'}\r\n                                            </label>\r\n                                            <input \r\n                                                className=\"input-element\" \r\n                                                id=\"phone\"\r\n                                                type=\"tel\" \r\n                                                min={6} \r\n                                                max={25} \r\n                                                ref={_phone} \r\n                                                value={order.phone}\r\n                                                onChange={onChangeText} \r\n                                                onKeyDown={(e:any) => focusNext({e, target: _email.current})}/>\r\n                                        </div>\r\n                                        <div className=\"input-block\">\r\n                                            <label htmlFor=\"email\">\r\n                                                {lang === 'en' ? 'Your email*' : 'Ваше почта*'}\r\n                                            </label>\r\n                                            <input \r\n                                                className=\"input-element\" \r\n                                                id=\"email\" \r\n                                                type=\"email\" \r\n                                                required \r\n                                                value={order.email}\r\n                                                ref={_email} \r\n                                                onChange={onChangeText} \r\n                                                onKeyDown={(e:any) => focusNext({e, target: _message.current})}/>\r\n                                        </div>\r\n                                        <div className=\"input-block message-block\">\r\n                                            <label htmlFor=\"message\">\r\n                                                {lang === 'en' ? 'Information about the order (at least 10 symbols)*' : 'Информация о заказе (минимум 10 символов)*'}\r\n                                            </label>\r\n                                            <textarea \r\n                                                className=\"input-element\" \r\n                                                id=\"message\" \r\n                                                required \r\n                                                minLength={10} \r\n                                                maxLength={1000} \r\n                                                ref={_message} \r\n                                                value={order.message}\r\n                                                onChange={onChangeText}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"files-block\">\r\n                                        <div className=\"input-block files\">\r\n                                            <label htmlFor=\"files\">{lang === 'en' ? 'Attach files' : 'Прикрепить файлы'}</label>\r\n                                            <AddFiles saveFiles={saveFiles} lang={lang} ref={addFilesRef}/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"cart-content__container\">\r\n                                    <h3>{lang === 'en' ? 'Your cart' : 'Ваша корзина'}</h3>\r\n                                    <CartContent />\r\n                                </div>\r\n\r\n                                <button \r\n                                    type=\"submit\" \r\n                                    disabled={cart.dataLoading.status !== 'success' && fibers.dataLoading.status !== 'success' && colors.dataLoading.status !== 'success' && order.dataSending.status !== 'sending'} \r\n                                    className=\"button_order\" \r\n                                    onClick={onSubmit}>\r\n                                        {lang === 'en' ? 'Order' : \"Отправить\"}\r\n                                    </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal {...{visible: modal.visible, close: closeModal, escExit: true}}>\r\n\t\t\t\t<MessageInfo {...{\r\n                    status: message.status,\r\n                    header: message.header,\r\n                    text: message.text, \r\n                    buttonText: lang === 'en' ? 'Close' : \"Закрыть\", \r\n                    buttonAction: closeModal\r\n                }}/>\r\n\t\t\t</Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state: IFullState): IPropsState => ({\r\n    lang: state.base.lang,\r\n    order: state.order,\r\n    cart: state.cart,\r\n    colors: state.colors,\r\n    fibers: state.fibers,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): IPropsActions => ({\r\n    setState: {\r\n\t\torder: bindActionCreators(actionsListOrder, dispatch),\r\n\t\tcolors: bindActionCreators(actionsListColors, dispatch),\r\n\t\tfibers: bindActionCreators(actionsListFibers, dispatch),\r\n\t\tcart: bindActionCreators(actionsListCart, dispatch),\r\n\t}\r\n})\r\n  \r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Order)\r\n/*\r\n                        <div className=\"img__container\">\r\n                            <img src={imgSide} alt=\"\" />\r\n                        </div>\r\n*/","import { IAction, IProductState, ICategoriesListItem, ICategory, ICategoryReceived, IDispatch, IProduct } from \"src/interfaces\"\r\nimport mockFibers from '../mocks/fibers'\r\nimport catalogFull from \"../mocks/catalogFull\";\r\nimport { actionsListProduct } from './actionsList'\r\nimport mockProducts from \"../mocks/catalogFull\";\r\n\r\n\r\nexport const setLoadDataStatusProduct = <T extends IProductState[\"dataLoading\"]>(payload: T):IAction<T> => ({\r\n    type: actionsListProduct.SET_LOAD_DATA_STATUS_PRODUCT,\r\n    payload\r\n});\r\n\r\n\r\nexport const setProduct = <T extends Omit<IProductState, \"dataLoading\">>(payload: T):IAction<T> => ({\r\n    type: actionsListProduct.SET_DATA_PRODUCT,\r\n    payload\r\n});\r\n/*\r\nexport const setSelectedImage = <T extends IProductState[\"selectedImage\"]>(payload: T):IAction<T> => ({\r\n    type: actionsListProduct.SET_SELECTED_IMAGE,\r\n    payload\r\n});\r\n*/\r\n\r\n\r\nexport const loadProduct = (id: IProduct[\"id\"]) => {\r\n    return async function(dispatch: IDispatch) {\r\n        dispatch(setLoadDataStatusProduct({status: 'loading', message: `Loading product ${id}`}))\r\n        try {\r\n            new Promise((res, rej) => {\r\n                setTimeout(() => {\r\n                    const product = mockProducts.find(product => product.id === id)\r\n                    if (product) {\r\n                        console.log(`product ${id} loaded`);\r\n                        res(product)\r\n                    } else (\r\n                        rej({mesasage: `product ${id} not found`})\r\n                    )\r\n                }, 1000)\r\n            }).then((data) => {\r\n                dispatch(setProduct(data as IProduct))\r\n                dispatch(setLoadDataStatusProduct({status: 'success', message: `Product id=${id} loaded`}))\r\n            }).catch(err => {\r\n                dispatch(setLoadDataStatusProduct({status: 'error', message: `ERROR while loading product id=${id}: ${err}`}))\r\n            })\r\n\r\n        } catch (e) {\r\n            dispatch(setLoadDataStatusProduct({status: 'error', message: `ERROR while loading product id=${id}: ${e}`}))\r\n        }\r\n    }\r\n}\r\n\r\n"],"names":["_ref","src","alt","id","loaded","setLoaded","useState","img","useRef","_jsxs","_Fragment","children","_jsx","Preloader","ref","onLoad","hasLoaded","style","display","idInstance","onChange","initialAmount","lang","reset","amount","setAmount","changeAmount","newAmount","amountToSet","useEffect","className","onClick","e","preventDefault","onBlur","onFocusOut","Number","target","value","type","props","_container","setStatusLoaded","_container$current","_img","Image","path","current","appendChild","addEventListener","_container$current2","removeEventListener","removeChild","descr","status","header","text","buttonText","buttonAction","map","currentText","index","visible","escExit","close","_modal","document","getElementById","modalKeyListener","keyCode","createPortal","width","height","viewBox","fill","xmlns","fillRule","stroke","clipRule","d","strokeWidth","strokeLinecap","setSendDataStatus","payload","actionsListOrder","SET_SEND_DATA_STATUS_ORDER","remove","confirmation","setConfirmation","onDelete","version","x","y","enableBackground","stopPropagation","PreloaderW","actionsCartList","changeItem","saveCart","removeItem","actionsListColors","loadColors","actionsListFibers","loadFibers","actionsListProduct","setProduct","setLoadDataStatusProduct","connect","state","cart","base","product","colors","fibers","dispatch","setState","bindActionCreators","cartReady","setCartReady","modal","setModal","modalImg","setModalImg","dataLoading","items","deleteItem","item","onAmountChange","length","i","_fibers$fibersList$fi","fiber","fibersList","find","fiberItem","short","name","color","NavLink","to","message","onProductClick","ImgWithPreloader","imgs","url","onImageClick","Delete","AmountChanger","Modal","closeModal","ModalImage","forwardRef","saveFiles","useImperativeHandle","clearAttachedFiles","setFiles","_dropArea","_files","_filesGallery","dragCounter","files","preventDefaults","dragEnter","_dropArea$current","classList","add","dragOver","_dropArea$current2","dragLeave","_dropArea$current3","dragDrop","_dropArea$current4","prev","_e$dataTransfer","dataTransfer","_dropArea$current6","_dropArea$current7","_dropArea$current8","_dropArea$current9","arrayOfFiles","innerHTML","imageTypes","reduce","async","acc","currentFile","Promise","res","then","reader","FileReader","readAsDataURL","onloadend","_filesGallery$current","_containerObj","createElement","_containerImg","_descr","includes","split","pop","result","iconFileQuestion","innerText","resolve","previewFiles","htmlFor","multiple","onSelectFiles","_dropArea$current5","_files$current","setName","SET_ORDER_NAME","setEmail","SET_ORDER_EMAIL","setPhone","SET_ORDER_PHONE","setMessage","SET_ORDER_MESSAGE","clearFiles","CLEAR_ORDER_FILES","clearForm","CLEAR_ORDER_FORM","addFiles","ADD_ORDER_FILES","sendOrder","filesArr","informer","fetch","method","headers","body","JSON","stringify","chat_id","process","ok","data","catch","err","file","en","ru","rej","timeStart","Date","now","formData","FormData","append","options","transitionSending","setTimeout","error","actionsListCart","clearCart","order","_name","_email","_phone","_message","addFilesRef","_addFilesRef$current","dataSending","focusNext","_ref2","key","focus","onChangeText","_parentElement","parentElement","clearError","required","min","max","onKeyDown","phone","email","minLength","maxLength","AddFiles","CartContent","disabled","currentDate","checkErrors","feildsToCheck","isWrong","forEach","field","_field$ref$current","_field$ref$current2","_field$ref$current2$p","checkValidity","concat","textCart","_colors$colors$find","textOrder","toISOString","slice","MessageInfo","SET_LOAD_DATA_STATUS_PRODUCT","SET_DATA_PRODUCT","loadProduct","mockProducts","console","log","mesasage"],"sourceRoot":""}